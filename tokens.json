{
  "global/typeface/font-core": {
    "global": {
      "fontFamilies": {
        "core": {
          "value": "IBM Plex Sans",
          "type": "fontFamilies"
        }
      },
      "fontWeights": {
        "core-thin": {
          "value": "100",
          "type": "fontWeights"
        },
        "core-extralight": {
          "value": "200",
          "type": "fontWeights"
        },
        "core-light": {
          "value": "300",
          "type": "fontWeights"
        },
        "core-regular": {
          "value": "400",
          "type": "fontWeights"
        },
        "core-medium": {
          "value": "500",
          "type": "fontWeights"
        },
        "core-semibold": {
          "value": "600",
          "type": "fontWeights"
        },
        "core-bold": {
          "value": "700",
          "type": "fontWeights"
        }
      }
    }
  },
  "global/color": {
    "global": {
      "color": {
        "neutral": {
          "100": {
            "value": "rgba(244, 244, 244, 1)",
            "type": "color",
            "description": "Do not use for UI elements or text. WCAG 2.x (relative luminance) contrast is 1.09:1 against background #ffffff"
          },
          "200": {
            "value": "rgba(217, 217, 217, 1)",
            "type": "color",
            "description": "Do not use for UI elements or text. WCAG 2.x (relative luminance) contrast is 1.41:1 against background #ffffff"
          },
          "300": {
            "value": "rgba(194, 194, 194, 1)",
            "type": "color",
            "description": "Do not use for UI elements or text. WCAG 2.x (relative luminance) contrast is 1.78:1 against background #ffffff"
          },
          "400": {
            "value": "rgba(172, 172, 172, 1)",
            "type": "color",
            "description": "Do not use for UI elements or text. WCAG 2.x (relative luminance) contrast is 2.26:1 against background #ffffff"
          },
          "500": {
            "value": "rgba(149, 149, 149, 1)",
            "type": "color",
            "description": "Color can be used for UI elements or large text. WCAG 2.x (relative luminance) contrast is 3:1 against background #ffffff"
          },
          "600": {
            "value": "rgba(127, 127, 127, 1)",
            "type": "color",
            "description": "Color can be used for UI elements or large text. WCAG 2.x (relative luminance) contrast is 3.96:1 against background #ffffff"
          },
          "700": {
            "value": "rgba(108, 108, 108, 1)",
            "type": "color",
            "description": "Color can be used for small text. WCAG 2.x (relative luminance) contrast is 5.18:1 against background #ffffff"
          },
          "800": {
            "value": "rgba(60, 60, 60, 1)",
            "type": "color",
            "description": "Color can be used for small text. WCAG 2.x (relative luminance) contrast is 10.89:1 against background #ffffff"
          },
          "900": {
            "value": "rgba(25, 25, 25, 1)",
            "type": "color",
            "description": "Color can be used for small text. WCAG 2.x (relative luminance) contrast is 17.54:1 against background #ffffff"
          },
          "1000": {
            "value": "rgba(18, 18, 18, 1)",
            "type": "color",
            "description": "Color can be used for small text. WCAG 2.x (relative luminance) contrast is 18.61:1 against background #ffffff"
          }
        },
        "common": {
          "white": {
            "value": "rgba(255, 255, 255, 1)",
            "type": "color",
            "description": "Pure white"
          },
          "black": {
            "value": "rgba(0, 0, 0, 1)",
            "type": "color",
            "description": "Pure black"
          },
          "transparent": {
            "value": "rgba(0, 0, 0, 0)",
            "type": "color",
            "description": "Fully transparent"
          }
        },
        "red": {
          "100": {
            "value": "rgba(249, 244, 243, 1)",
            "type": "color",
            "description": "Do not use for UI elements or text. WCAG 2.x (relative luminance) contrast is 1.09:1 against background #ffffff"
          },
          "200": {
            "value": "rgba(242, 209, 203, 1)",
            "type": "color",
            "description": "Do not use for UI elements or text. WCAG 2.x (relative luminance) contrast is 1.41:1 against background #ffffff"
          },
          "300": {
            "value": "rgba(240, 180, 168, 1)",
            "type": "color",
            "description": "Do not use for UI elements or text. WCAG 2.x (relative luminance) contrast is 1.78:1 against background #ffffff"
          },
          "400": {
            "value": "rgba(237, 150, 133, 1)",
            "type": "color",
            "description": "Do not use for UI elements or text. WCAG 2.x (relative luminance) contrast is 2.26:1 against background #ffffff"
          },
          "500": {
            "value": "rgba(230, 115, 95, 1)",
            "type": "color",
            "description": "Color can be used for UI elements or large text. WCAG 2.x (relative luminance) contrast is 3:1 against background #ffffff"
          },
          "600": {
            "value": "rgba(219, 82, 61, 1)",
            "type": "color",
            "description": "Color can be used for UI elements or large text. WCAG 2.x (relative luminance) contrast is 3.96:1 against background #ffffff"
          },
          "700": {
            "value": "rgba(203, 52, 35, 1)",
            "type": "color",
            "description": "Color can be used for small text. WCAG 2.x (relative luminance) contrast is 5.18:1 against background #ffffff"
          },
          "800": {
            "value": "rgba(122, 19, 9, 1)",
            "type": "color",
            "description": "Color can be used for small text. WCAG 2.x (relative luminance) contrast is 10.89:1 against background #ffffff"
          },
          "900": {
            "value": "rgba(47, 15, 9, 1)",
            "type": "color",
            "description": "Color can be used for small text. WCAG 2.x (relative luminance) contrast is 17.54:1 against background #ffffff"
          },
          "1000": {
            "value": "rgba(36, 11, 7, 1)",
            "type": "color",
            "description": "Color can be used for small text. WCAG 2.x (relative luminance) contrast is 18.61:1 against background #ffffff"
          }
        },
        "orange": {
          "100": {
            "value": "rgba(255, 244, 227, 1)",
            "type": "color",
            "description": "Do not use for UI elements or text. WCAG 2.x (relative luminance) contrast is 1.09:1 against background #ffffff"
          },
          "200": {
            "value": "rgba(255, 210, 140, 1)",
            "type": "color",
            "description": "Do not use for UI elements or text. WCAG 2.x (relative luminance) contrast is 1.41:1 against background #ffffff"
          },
          "300": {
            "value": "rgba(255, 179, 74, 1)",
            "type": "color",
            "description": "Do not use for UI elements or text. WCAG 2.x (relative luminance) contrast is 1.78:1 against background #ffffff"
          },
          "400": {
            "value": "#F0981B",
            "type": "color",
            "description": "Do not use for UI elements or text. WCAG 2.x (relative luminance) contrast is 2.26:1 against background #ffffff"
          },
          "500": {
            "value": "rgba(211, 130, 2, 1)",
            "type": "color",
            "description": "Color can be used for UI elements or large text. WCAG 2.x (relative luminance) contrast is 3:1 against background #ffffff"
          },
          "600": {
            "value": "rgba(182, 112, 0, 1)",
            "type": "color",
            "description": "Color can be used for UI elements or large text. WCAG 2.x (relative luminance) contrast is 3.96:1 against background #ffffff"
          },
          "700": {
            "value": "rgba(156, 95, 1, 1)",
            "type": "color",
            "description": "Color can be used for small text. WCAG 2.x (relative luminance) contrast is 5.18:1 against background #ffffff"
          },
          "800": {
            "value": "rgba(86, 54, 11, 1)",
            "type": "color",
            "description": "Color can be used for small text. WCAG 2.x (relative luminance) contrast is 10.89:1 against background #ffffff"
          },
          "900": {
            "value": "rgba(35, 23, 8, 1)",
            "type": "color",
            "description": "Color can be used for small text. WCAG 2.x (relative luminance) contrast is 17.54:1 against background #ffffff"
          },
          "1000": {
            "value": "rgba(26, 17, 5, 1)",
            "type": "color",
            "description": "Color can be used for small text. WCAG 2.x (relative luminance) contrast is 18.61:1 against background #ffffff"
          }
        },
        "yellow": {
          "100": {
            "value": "#fff799",
            "type": "color",
            "description": "Do not use for UI elements or text. WCAG 2.x (relative luminance) contrast is 1.09:1 against background #ffffff"
          },
          "200": {
            "value": "#f8d800",
            "type": "color",
            "description": "Do not use for UI elements or text. WCAG 2.x (relative luminance) contrast is 1.41:1 against background #ffffff"
          },
          "300": {
            "value": "#e3bf00",
            "type": "color",
            "description": "Do not use for UI elements or text. WCAG 2.x (relative luminance) contrast is 1.78:1 against background #ffffff"
          },
          "400": {
            "value": "#cbaa00",
            "type": "color",
            "description": "Do not use for UI elements or text. WCAG 2.x (relative luminance) contrast is 2.26:1 against background #ffffff"
          },
          "500": {
            "value": "#af9300",
            "type": "color",
            "description": "Color can be used for UI elements or large text. WCAG 2.x (relative luminance) contrast is 3:1 against background #ffffff"
          },
          "600": {
            "value": "#987f00",
            "type": "color",
            "description": "Color can be used for UI elements or large text. WCAG 2.x (relative luminance) contrast is 3.96:1 against background #ffffff"
          },
          "700": {
            "value": "#816b00",
            "type": "color",
            "description": "Color can be used for small text. WCAG 2.x (relative luminance) contrast is 5.18:1 against background #ffffff"
          },
          "800": {
            "value": "#695700",
            "type": "color",
            "description": "Color can be used for small text. WCAG 2.x (relative luminance) contrast is 10.89:1 against background #ffffff"
          },
          "900": {
            "value": "#191500",
            "type": "color",
            "description": "Color can be used for small text. WCAG 2.x (relative luminance) contrast is 17.54:1 against background #ffffff"
          },
          "1000": {
            "value": "#141100",
            "type": "color",
            "description": "Color can be used for small text. WCAG 2.x (relative luminance) contrast is 18.61:1 against background #ffffff"
          }
        },
        "green": {
          "100": {
            "value": "rgba(238, 249, 231, 1)",
            "type": "color",
            "description": "Do not use for UI elements or text. WCAG 2.x (relative luminance) contrast is 1.09:1 against background #ffffff"
          },
          "200": {
            "value": "rgba(177, 231, 150, 1)",
            "type": "color",
            "description": "Do not use for UI elements or text. WCAG 2.x (relative luminance) contrast is 1.41:1 against background #ffffff"
          },
          "300": {
            "value": "rgba(132, 214, 98, 1)",
            "type": "color",
            "description": "Do not use for UI elements or text. WCAG 2.x (relative luminance) contrast is 1.78:1 against background #ffffff"
          },
          "400": {
            "value": "rgba(98, 194, 62, 1)",
            "type": "color",
            "description": "Do not use for UI elements or text. WCAG 2.x (relative luminance) contrast is 2.26:1 against background #ffffff"
          },
          "500": {
            "value": "rgba(73, 169, 38, 1)",
            "type": "color",
            "description": "Color can be used for UI elements or large text. WCAG 2.x (relative luminance) contrast is 3:1 against background #ffffff"
          },
          "600": {
            "value": "rgba(58, 145, 27, 1)",
            "type": "color",
            "description": "Color can be used for UI elements or large text. WCAG 2.x (relative luminance) contrast is 3.96:1 against background #ffffff"
          },
          "700": {
            "value": "rgba(49, 124, 22, 1)",
            "type": "color",
            "description": "Color can be used for small text. WCAG 2.x (relative luminance) contrast is 5.18:1 against background #ffffff"
          },
          "800": {
            "value": "rgba(32, 69, 18, 1)",
            "type": "color",
            "description": "Color can be used for small text. WCAG 2.x (relative luminance) contrast is 10.89:1 against background #ffffff"
          },
          "900": {
            "value": "rgba(18, 27, 11, 1)",
            "type": "color",
            "description": "Color can be used for small text. WCAG 2.x (relative luminance) contrast is 17.54:1 against background #ffffff"
          },
          "1000": {
            "value": "rgba(13, 21, 7, 1)",
            "type": "color",
            "description": "Color can be used for small text. WCAG 2.x (relative luminance) contrast is 18.61:1 against background #ffffff"
          }
        },
        "blue": {
          "100": {
            "value": "rgba(245, 245, 246, 1)",
            "type": "color",
            "description": "Do not use for UI elements or text. WCAG 2.x (relative luminance) contrast is 1.09:1 against background #ffffff"
          },
          "200": {
            "value": "rgba(208, 218, 222, 1)",
            "type": "color",
            "description": "Do not use for UI elements or text. WCAG 2.x (relative luminance) contrast is 1.41:1 against background #ffffff"
          },
          "300": {
            "value": "rgba(171, 198, 209, 1)",
            "type": "color",
            "description": "Do not use for UI elements or text. WCAG 2.x (relative luminance) contrast is 1.78:1 against background #ffffff"
          },
          "400": {
            "value": "rgba(129, 180, 201, 1)",
            "type": "color",
            "description": "Do not use for UI elements or text. WCAG 2.x (relative luminance) contrast is 2.26:1 against background #ffffff"
          },
          "500": {
            "value": "rgba(61, 159, 200, 1)",
            "type": "color",
            "description": "Color can be used for UI elements or large text. WCAG 2.x (relative luminance) contrast is 3:1 against background #ffffff"
          },
          "600": {
            "value": "rgba(37, 137, 179, 1)",
            "type": "color",
            "description": "Color can be used for UI elements or large text. WCAG 2.x (relative luminance) contrast is 3.96:1 against background #ffffff"
          },
          "700": {
            "value": "rgba(23, 116, 156, 1)",
            "type": "color",
            "description": "Color can be used for small text. WCAG 2.x (relative luminance) contrast is 5.18:1 against background #ffffff"
          },
          "800": {
            "value": "rgba(3, 65, 92, 1)",
            "type": "color",
            "description": "Color can be used for small text. WCAG 2.x (relative luminance) contrast is 10.89:1 against background #ffffff"
          },
          "900": {
            "value": "rgba(0, 28, 40, 1)",
            "type": "color",
            "description": "Color can be used for small text. WCAG 2.x (relative luminance) contrast is 17.54:1 against background #ffffff"
          },
          "1000": {
            "value": "rgba(0, 21, 30, 1)",
            "type": "color",
            "description": "Color can be used for small text. WCAG 2.x (relative luminance) contrast is 18.61:1 against background #ffffff"
          }
        },
        "cyan": {
          "100": {
            "value": "#eef0f1",
            "type": "color",
            "description": "Do not use for UI elements or text. WCAG 2.x (relative luminance) contrast is 1.09:1 against background #ffffff"
          },
          "200": {
            "value": "#c2d7e0",
            "type": "color",
            "description": "Do not use for UI elements or text. WCAG 2.x (relative luminance) contrast is 1.41:1 against background #ffffff"
          },
          "300": {
            "value": "#80c0dc",
            "type": "color",
            "description": "Do not use for UI elements or text. WCAG 2.x (relative luminance) contrast is 1.78:1 against background #ffffff"
          },
          "400": {
            "value": "#33ABDE",
            "type": "color",
            "description": "Do not use for UI elements or text. WCAG 2.x (relative luminance) contrast is 2.26:1 against background #ffffff"
          },
          "500": {
            "value": "#008ac7",
            "type": "color",
            "description": "Color can be used for UI elements or large text. WCAG 2.x (relative luminance) contrast is 3:1 against background #ffffff"
          },
          "600": {
            "value": "#006f9f",
            "type": "color",
            "description": "Color can be used for UI elements or large text. WCAG 2.x (relative luminance) contrast is 3.96:1 against background #ffffff"
          },
          "700": {
            "value": "#085677",
            "type": "color",
            "description": "Color can be used for small text. WCAG 2.x (relative luminance) contrast is 5.18:1 against background #ffffff"
          },
          "800": {
            "value": "#0f3e52",
            "type": "color",
            "description": "Color can be used for small text. WCAG 2.x (relative luminance) contrast is 10.89:1 against background #ffffff"
          },
          "900": {
            "value": "rgba(15, 26, 35, 1)",
            "type": "color",
            "description": "Color can be used for small text. WCAG 2.x (relative luminance) contrast is 17.54:1 against background #ffffff"
          },
          "1000": {
            "value": "rgba(12, 19, 25, 1)",
            "type": "color",
            "description": "Color can be used for small text. WCAG 2.x (relative luminance) contrast is 18.61:1 against background #ffffff"
          }
        },
        "purple": {
          "100": {
            "value": "rgba(249, 244, 249, 1)",
            "type": "color",
            "description": "Do not use for UI elements or text. WCAG 2.x (relative luminance) contrast is 1.09:1 against background #ffffff"
          },
          "200": {
            "value": "rgba(233, 210, 234, 1)",
            "type": "color",
            "description": "Do not use for UI elements or text. WCAG 2.x (relative luminance) contrast is 1.41:1 against background #ffffff"
          },
          "300": {
            "value": "rgba(219, 182, 221, 1)",
            "type": "color",
            "description": "Do not use for UI elements or text. WCAG 2.x (relative luminance) contrast is 1.78:1 against background #ffffff"
          },
          "400": {
            "value": "rgba(205, 156, 208, 1)",
            "type": "color",
            "description": "Do not use for UI elements or text. WCAG 2.x (relative luminance) contrast is 2.26:1 against background #ffffff"
          },
          "500": {
            "value": "rgba(188, 128, 192, 1)",
            "type": "color",
            "description": "Color can be used for UI elements or large text. WCAG 2.x (relative luminance) contrast is 3:1 against background #ffffff"
          },
          "600": {
            "value": "rgba(171, 103, 177, 1)",
            "type": "color",
            "description": "Color can be used for UI elements or large text. WCAG 2.x (relative luminance) contrast is 3.96:1 against background #ffffff"
          },
          "700": {
            "value": "rgba(153, 81, 161, 1)",
            "type": "color",
            "description": "Color can be used for small text. WCAG 2.x (relative luminance) contrast is 5.18:1 against background #ffffff"
          },
          "800": {
            "value": "rgba(93, 38, 99, 1)",
            "type": "color",
            "description": "Color can be used for small text. WCAG 2.x (relative luminance) contrast is 10.89:1 against background #ffffff"
          },
          "900": {
            "value": "rgba(36, 19, 38, 1)",
            "type": "color",
            "description": "Color can be used for small text. WCAG 2.x (relative luminance) contrast is 17.54:1 against background #ffffff"
          },
          "1000": {
            "value": "rgba(26, 15, 27, 1)",
            "type": "color",
            "description": "Color can be used for small text. WCAG 2.x (relative luminance) contrast is 18.61:1 against background #ffffff"
          }
        },
        "magenta": {
          "100": {
            "value": "rgba(252, 241, 246, 1)",
            "type": "color",
            "description": "Do not use for UI elements or text. WCAG 2.x (relative luminance) contrast is 1.09:1 against background #ffffff"
          },
          "200": {
            "value": "rgba(245, 207, 226, 1)",
            "type": "color",
            "description": "Do not use for UI elements or text. WCAG 2.x (relative luminance) contrast is 1.41:1 against background #ffffff"
          },
          "300": {
            "value": "rgba(240, 175, 206, 1)",
            "type": "color",
            "description": "Do not use for UI elements or text. WCAG 2.x (relative luminance) contrast is 1.78:1 against background #ffffff"
          },
          "400": {
            "value": "rgba(233, 145, 188, 1)",
            "type": "color",
            "description": "Do not use for UI elements or text. WCAG 2.x (relative luminance) contrast is 2.26:1 against background #ffffff"
          },
          "500": {
            "value": "rgba(225, 110, 166, 1)",
            "type": "color",
            "description": "Color can be used for UI elements or large text. WCAG 2.x (relative luminance) contrast is 3:1 against background #ffffff"
          },
          "600": {
            "value": "rgba(213, 77, 143, 1)",
            "type": "color",
            "description": "Color can be used for UI elements or large text. WCAG 2.x (relative luminance) contrast is 3.96:1 against background #ffffff"
          },
          "700": {
            "value": "rgba(196, 49, 120, 1)",
            "type": "color",
            "description": "Color can be used for small text. WCAG 2.x (relative luminance) contrast is 5.18:1 against background #ffffff"
          },
          "800": {
            "value": "rgba(120, 12, 65, 1)",
            "type": "color",
            "description": "Color can be used for small text. WCAG 2.x (relative luminance) contrast is 10.89:1 against background #ffffff"
          },
          "900": {
            "value": "rgba(54, 5, 29, 1)",
            "type": "color",
            "description": "Color can be used for small text. WCAG 2.x (relative luminance) contrast is 17.54:1 against background #ffffff"
          },
          "1000": {
            "value": "rgba(42, 4, 23, 1)",
            "type": "color",
            "description": "Color can be used for small text. WCAG 2.x (relative luminance) contrast is 18.61:1 against background #ffffff"
          }
        }
      }
    }
  },
  "global/scale": {
    "scale": {
      "multiplier": {
        "value": "1.3",
        "type": "other",
        "description": "Change the value of this token to modify every token in the scales."
      },
      "base": {
        "value": "16",
        "type": "other",
        "description": "Tokens used as the default or \"mid-point\" in your scale will have this value without any changes. So when you adjust only the multiplier token, this is not affected."
      },
      "factor": {
        "value": "4",
        "type": "other"
      },
      "unitless": {
        "2xs": {
          "value": "floor(roundTo({scale.unitless.xs} / {scale.multiplier}, 0) / {scale.factor}) * {scale.factor}",
          "type": "other"
        },
        "xs": {
          "value": "floor(roundTo({scale.unitless.sm} / {scale.multiplier}, 0) / {scale.factor}) * {scale.factor}",
          "type": "other"
        },
        "sm": {
          "value": "floor(roundTo({scale.unitless.md} / {scale.multiplier}, 0) / {scale.factor}) * {scale.factor}",
          "type": "other"
        },
        "md": {
          "value": "{scale.base}",
          "type": "other",
          "description": "Smallest body size"
        },
        "lg": {
          "value": "ceil(roundTo({scale.unitless.md} * {scale.multiplier}, 0) / {scale.factor}) * {scale.factor}",
          "type": "other"
        },
        "xl": {
          "value": "ceil(roundTo({scale.unitless.lg} * {scale.multiplier}, 0) / {scale.factor}) * {scale.factor}",
          "type": "other"
        },
        "2xl": {
          "value": "ceil(roundTo({scale.unitless.xl} * {scale.multiplier}, 0) / {scale.factor}) * {scale.factor}",
          "type": "other"
        },
        "3xl": {
          "value": "ceil(roundTo({scale.unitless.2xl} * {scale.multiplier}, 0) / {scale.factor}) * {scale.factor}",
          "type": "other"
        },
        "4xl": {
          "value": "ceil(roundTo({scale.unitless.3xl} * {scale.multiplier}, 0) / {scale.factor}) * {scale.factor}",
          "type": "other"
        },
        "5xl": {
          "value": "ceil(roundTo({scale.unitless.4xl} * {scale.multiplier}, 0) / {scale.factor}) * {scale.factor}",
          "type": "other"
        },
        "6xl": {
          "value": "ceil(roundTo({scale.unitless.5xl} * {scale.multiplier}, 0) / {scale.factor}) * {scale.factor}",
          "type": "other"
        },
        "7xl": {
          "value": "ceil(roundTo({scale.unitless.6xl} * {scale.multiplier}, 0) / {scale.factor}) * {scale.factor}",
          "type": "other"
        },
        "8xl": {
          "value": "ceil(roundTo({scale.unitless.7xl} * {scale.multiplier}, 0) / {scale.factor}) * {scale.factor}",
          "type": "other"
        },
        "9xl": {
          "value": "ceil(roundTo({scale.unitless.8xl} * {scale.multiplier}, 0) / {scale.factor}) * {scale.factor}",
          "type": "other"
        },
        "10xl": {
          "value": "ceil(roundTo({scale.unitless.9xl} * {scale.multiplier}, 0) / {scale.factor}) * {scale.factor}",
          "type": "other"
        }
      },
      "rem": {
        "2xs": {
          "value": "{scale.unitless.2xs} / {rem-base} * 1rem",
          "type": "other"
        },
        "xs": {
          "value": "{scale.unitless.xs} / {rem-base} * 1rem",
          "type": "other"
        },
        "sm": {
          "value": "{scale.unitless.sm} / {rem-base} * 1rem",
          "type": "other"
        },
        "md": {
          "value": "{scale.unitless.md} / {rem-base} * 1rem",
          "type": "other"
        },
        "lg": {
          "value": "{scale.unitless.lg} / {rem-base} * 1rem",
          "type": "other"
        },
        "xl": {
          "value": "{scale.unitless.xl} / {rem-base} * 1rem",
          "type": "other"
        },
        "2xl": {
          "value": "{scale.unitless.2xl} / {rem-base} * 1rem",
          "type": "other"
        },
        "3xl": {
          "value": "{scale.unitless.3xl} / {rem-base} * 1rem",
          "type": "other"
        },
        "4xl": {
          "value": "{scale.unitless.4xl} / {rem-base} * 1rem",
          "type": "other"
        },
        "5xl": {
          "value": "{scale.unitless.5xl} / {rem-base} * 1rem",
          "type": "other"
        },
        "6xl": {
          "value": "{scale.unitless.6xl} / {rem-base} * 1rem",
          "type": "other"
        },
        "7xl": {
          "value": "{scale.unitless.7xl} / {rem-base} * 1rem",
          "type": "other"
        },
        "8xl": {
          "value": "{scale.unitless.8xl} / {rem-base} * 1rem",
          "type": "other"
        },
        "9xl": {
          "value": "{scale.unitless.9xl} / {rem-base} * 1rem",
          "type": "other"
        },
        "10xl": {
          "value": "{scale.unitless.10xl} / {rem-base} * 1rem",
          "type": "other"
        }
      }
    },
    "rem-base": {
      "value": "16",
      "type": "other"
    },
    "NOTES": {
      "scale": {
        "customize": {
          "value": "Adjust the base and multiplier",
          "type": "other",
          "description": "Likely you will just need to change the multiplier value to drastically change your scale, and the base might be helpful if you are moving to drasically different use cases. "
        },
        "mid-point": {
          "value": "md token",
          "type": "other",
          "description": "Steps in the scale below the mid-point get smaller, above get bigger"
        },
        "factor-explained": {
          "value": "Your pixel grid value",
          "type": "other",
          "description": "For when you want your math equasions to always land on your 4/8 pixel grid, set the factor token value to that number. The example here is 4. So my scale has a multiplier of 1.2, but it will bump up that number to round to the nearst multiple (or factor) of 4. So if the math is 16 * 1.2, I don't want a 19.2 pixel size, and I don't want the next step after 16, to also be 16, so the formula will round up to 20. "
        }
      },
      "scale-rem": {
        "add-unit": {
          "value": "when referencing, add the \"rem\" unit or it will populate as pixels in Figma",
          "type": "other",
          "description": "For example, if we want to type xl scale in rem value as a scale size, we would type \n[scale.rem.xl]rem as the value in a scale size token\n\n*replacing the square bracket with curly brackets but I can't do that here or you won't see the example. "
        }
      },
      "other-token-type": {
        "value": "Will not export to Figma variables",
        "type": "other",
        "description": "But you can use math, and reference them across every token type so they are being used as a utility for that reason."
      }
    }
  },
  "global/dimension": {
    "global": {
      "dimension": {
        "0": {
          "value": "0",
          "type": "dimension"
        },
        "6": {
          "value": "{global.dimension.base} * 6.25",
          "type": "dimension"
        },
        "12": {
          "value": "{global.dimension.base} * 12.5",
          "type": "dimension"
        },
        "25": {
          "value": "{global.dimension.base} * 25",
          "type": "dimension"
        },
        "37": {
          "value": "{global.dimension.base} * 37.5",
          "type": "dimension"
        },
        "50": {
          "value": "{global.dimension.base} * 50",
          "type": "dimension"
        },
        "75": {
          "value": "{global.dimension.base} * 75",
          "type": "dimension"
        },
        "100": {
          "value": "{global.dimension.base} * 100",
          "type": "dimension"
        },
        "125": {
          "value": "{global.dimension.base} * 125",
          "type": "dimension"
        },
        "150": {
          "value": "{global.dimension.base} * 150",
          "type": "dimension"
        },
        "175": {
          "value": "{global.dimension.base} * 175",
          "type": "dimension"
        },
        "200": {
          "value": "{global.dimension.base} * 200",
          "type": "dimension"
        },
        "225": {
          "value": "{global.dimension.base} * 225",
          "type": "dimension"
        },
        "250": {
          "value": "{global.dimension.base} * 250",
          "type": "dimension"
        },
        "300": {
          "value": "{global.dimension.base} * 300",
          "type": "dimension"
        },
        "350": {
          "value": "{global.dimension.base} * 350",
          "type": "dimension"
        },
        "400": {
          "value": "{global.dimension.base} * 400",
          "type": "dimension"
        },
        "450": {
          "value": "{global.dimension.base} * 450",
          "type": "dimension"
        },
        "500": {
          "value": "{global.dimension.base} * 500",
          "type": "dimension"
        },
        "600": {
          "value": "{global.dimension.base} * 600",
          "type": "dimension"
        },
        "700": {
          "value": "{global.dimension.base} * 700",
          "type": "dimension"
        },
        "800": {
          "value": "{global.dimension.base} * 800",
          "type": "dimension"
        },
        "900": {
          "value": "{global.dimension.base} * 900",
          "type": "dimension"
        },
        "1000": {
          "value": "{global.dimension.base} * 1000",
          "type": "dimension"
        },
        "1100": {
          "value": "{global.dimension.base} * 1100",
          "type": "dimension"
        },
        "1200": {
          "value": "{global.dimension.base} * 1200",
          "type": "dimension"
        },
        "1300": {
          "value": "{global.dimension.base} * 1300",
          "type": "dimension"
        },
        "1400": {
          "value": "{global.dimension.base} * 1400",
          "type": "dimension"
        },
        "1500": {
          "value": "{global.dimension.base} * 1500",
          "type": "dimension"
        },
        "1600": {
          "value": "{global.dimension.base} * 1600",
          "type": "dimension"
        },
        "2000": {
          "value": "{global.dimension.base} * 2000",
          "type": "dimension"
        },
        "2400": {
          "value": "{global.dimension.base} * 2400",
          "type": "dimension"
        },
        "base": {
          "value": "{rem-base} / 100",
          "type": "dimension"
        }
      }
    }
  },
  "global/border": {
    "global": {
      "borderRadius": {
        "0": {
          "value": "0",
          "type": "borderRadius"
        },
        "6": {
          "value": "{global.borderRadius.base} * 6.25",
          "type": "borderRadius"
        },
        "12": {
          "value": "{global.borderRadius.base} * 12.5",
          "type": "borderRadius"
        },
        "25": {
          "value": "{global.borderRadius.base} * 25",
          "type": "borderRadius"
        },
        "37": {
          "value": "{global.borderRadius.base} * 37.5",
          "type": "borderRadius"
        },
        "50": {
          "value": "{global.borderRadius.base} * 50",
          "type": "borderRadius"
        },
        "75": {
          "value": "{global.borderRadius.base} * 75",
          "type": "borderRadius"
        },
        "100": {
          "value": "{global.borderRadius.base} * 100",
          "type": "borderRadius"
        },
        "125": {
          "value": "{global.borderRadius.base} * 125",
          "type": "borderRadius"
        },
        "150": {
          "value": "{global.borderRadius.base} * 150",
          "type": "borderRadius"
        },
        "200": {
          "value": "{global.borderRadius.base} * 200",
          "type": "borderRadius"
        },
        "300": {
          "value": "{global.borderRadius.base} * 300",
          "type": "borderRadius"
        },
        "pill": {
          "value": "1000",
          "type": "borderRadius"
        },
        "base": {
          "value": "{rem-base} / 100",
          "type": "borderRadius"
        }
      },
      "borderWidth": {
        "0": {
          "value": "0",
          "type": "borderWidth"
        },
        "5": {
          "value": "0.5",
          "type": "borderWidth"
        },
        "10": {
          "value": "1",
          "type": "borderWidth"
        },
        "15": {
          "value": "1.5",
          "type": "borderWidth"
        },
        "20": {
          "value": "2",
          "type": "borderWidth"
        },
        "25": {
          "value": "2.5",
          "type": "borderWidth"
        },
        "30": {
          "value": "3",
          "type": "borderWidth"
        },
        "35": {
          "value": "3.5",
          "type": "borderWidth"
        },
        "40": {
          "value": "4",
          "type": "borderWidth"
        }
      }
    }
  },
  "semantic/base": {
    "semantic": {
      "paragraphSpacing": {
        "default": {
          "value": "0",
          "type": "paragraphSpacing",
          "description": "This token matches a design property in Figma that does not have a direct CSS equivellent. In this system it will always be a zero value token, and designers should use a line break to create paragraph spacing which better matches how <p> are written in code. "
        }
      },
      "paragraphIndent": {
        "default": {
          "value": "0rem",
          "type": "dimension",
          "description": "There is no proper way to define a responsive value for this property so it will remain a zero property value in this system."
        }
      },
      "textDecoration": {
        "default": {
          "value": "none",
          "type": "textDecoration",
          "description": "Default text decoration (typically none)."
        },
        "emphasis": {
          "value": "underline",
          "type": "textDecoration",
          "description": "used to emphasise text"
        },
        "strike": {
          "value": "line-through",
          "type": "textDecoration",
          "description": "Text decoration for strikethrough text."
        }
      },
      "textCase": {
        "default": {
          "value": "none",
          "type": "textCase",
          "description": "Default text casing (typically none/as written)."
        }
      },
      "typography": {
        "p3": {
          "default": {
            "value": {
              "letterSpacing": "{semantic.letterSpacing.unitless.paragraph.relaxed} * 100%",
              "lineHeight": "{semantic.lineHeight.unitless.paragraph.relaxed} * 100%",
              "fontFamily": "{semantic.fontFamily.body}",
              "fontWeight": "{semantic.fontWeight.body.default}",
              "fontSize": "{semantic.fontSize.p3}",
              "paragraphSpacing": "{semantic.paragraphSpacing.default}",
              "textDecoration": "{semantic.textDecoration.default}",
              "textCase": "{semantic.textCase.default}",
              "paragraphIndent": "{semantic.paragraphIndent.default}"
            },
            "type": "typography",
            "description": "Default typography style for the smallest paragraph text (p3)."
          },
          "interactive": {
            "value": {
              "letterSpacing": "{semantic.letterSpacing.unitless.paragraph.relaxed} * 100%",
              "lineHeight": "{semantic.lineHeight.unitless.paragraph.relaxed} * 100%",
              "fontFamily": "{semantic.fontFamily.body}",
              "fontWeight": "{semantic.fontWeight.body.default}",
              "fontSize": "{semantic.fontSize.p3}",
              "paragraphSpacing": "{semantic.paragraphSpacing.default}",
              "textDecoration": "{semantic.textDecoration.emphasis}",
              "textCase": "{semantic.textCase.default}",
              "paragraphIndent": "{semantic.paragraphIndent.default}"
            },
            "type": "typography",
            "description": "Style for small interactive text elements (e.g., small links, interactive tags) where an underline affordance is needed. Inherits p3 metrics."
          }
        },
        "p2": {
          "default": {
            "value": {
              "letterSpacing": "{semantic.letterSpacing.unitless.paragraph.default} * 100%",
              "lineHeight": "{semantic.lineHeight.unitless.paragraph.default} * 100%",
              "fontFamily": "{semantic.fontFamily.body}",
              "fontWeight": "{semantic.fontWeight.body.default}",
              "fontSize": "{semantic.fontSize.p2}",
              "paragraphSpacing": "{semantic.paragraphSpacing.default}",
              "textDecoration": "{semantic.textDecoration.default}",
              "textCase": "{semantic.textCase.default}",
              "paragraphIndent": "{semantic.paragraphIndent.default}"
            },
            "type": "typography",
            "description": "Default typography style for standard paragraph text (p2)."
          },
          "interactive": {
            "value": {
              "letterSpacing": "{semantic.letterSpacing.unitless.paragraph.default} * 100%",
              "lineHeight": "{semantic.lineHeight.unitless.paragraph.default} * 100%",
              "fontFamily": "{semantic.fontFamily.body}",
              "fontWeight": "{semantic.fontWeight.body.default}",
              "fontSize": "{semantic.fontSize.p2}",
              "paragraphSpacing": "{semantic.paragraphSpacing.default}",
              "textDecoration": "{semantic.textDecoration.emphasis}",
              "textCase": "{semantic.textCase.default}",
              "paragraphIndent": "{semantic.paragraphIndent.default}"
            },
            "type": "typography",
            "description": "Style for standard-sized interactive text elements (e.g., primary text links, clickable list items) requiring an underline affordance. Inherits p2 metrics."
          }
        },
        "p1": {
          "default": {
            "value": {
              "letterSpacing": "{semantic.letterSpacing.unitless.paragraph.default} * 100%",
              "lineHeight": "{semantic.lineHeight.unitless.paragraph.default} * 100%",
              "fontFamily": "{semantic.fontFamily.body}",
              "fontWeight": "{semantic.fontWeight.body.default}",
              "fontSize": "{semantic.fontSize.p1}",
              "paragraphSpacing": "{semantic.paragraphSpacing.default}",
              "textDecoration": "{semantic.textDecoration.default}",
              "textCase": "{semantic.textCase.default}",
              "paragraphIndent": "{semantic.paragraphIndent.default}"
            },
            "type": "typography",
            "description": "Default typography style for the largest paragraph text (p1)."
          },
          "interactive": {
            "value": {
              "letterSpacing": "{semantic.letterSpacing.unitless.paragraph.default} * 100%",
              "lineHeight": "{semantic.lineHeight.unitless.paragraph.default} * 100%",
              "fontFamily": "{semantic.fontFamily.body}",
              "fontWeight": "{semantic.fontWeight.body.default}",
              "fontSize": "{semantic.fontSize.p1}",
              "paragraphSpacing": "{semantic.paragraphSpacing.default}",
              "textDecoration": "{semantic.textDecoration.emphasis}",
              "textCase": "{semantic.textCase.default}",
              "paragraphIndent": "{semantic.paragraphIndent.default}"
            },
            "type": "typography",
            "description": "Style for large interactive text elements (e.g., large call-to-action links) needing an underline affordance. Inherits p1 metrics."
          }
        },
        "h6": {
          "default": {
            "value": {
              "letterSpacing": "{semantic.letterSpacing.unitless.heading.default} * 100%",
              "lineHeight": "{semantic.lineHeight.unitless.heading.default} * 100%",
              "fontFamily": "{semantic.fontFamily.heading}",
              "fontWeight": "{semantic.fontWeight.heading.default}",
              "fontSize": "{semantic.fontSize.h6}",
              "paragraphSpacing": "{semantic.paragraphSpacing.default}",
              "textDecoration": "{semantic.textDecoration.default}",
              "textCase": "{semantic.textCase.default}",
              "paragraphIndent": "{semantic.paragraphIndent.default}"
            },
            "type": "typography",
            "description": "Default typography style for level 6 headings (h6)."
          },
          "emphasis": {
            "value": {
              "letterSpacing": "{semantic.letterSpacing.unitless.heading.tight} * 100%",
              "lineHeight": "{semantic.lineHeight.unitless.heading.default} * 100%",
              "fontFamily": "{semantic.fontFamily.heading}",
              "fontWeight": "{semantic.fontWeight.heading.emphasis}",
              "fontSize": "{semantic.fontSize.h6}",
              "paragraphSpacing": "{semantic.paragraphSpacing.default}",
              "textDecoration": "{semantic.textDecoration.default}",
              "textCase": "{semantic.textCase.default}",
              "paragraphIndent": "{semantic.paragraphIndent.default}"
            },
            "type": "typography",
            "description": "Emphasized (typically bolder) typography style for level 6 headings (h6)."
          },
          "subtle": {
            "value": {
              "letterSpacing": "{semantic.letterSpacing.unitless.heading.relaxed} * 100%",
              "lineHeight": "{semantic.lineHeight.unitless.heading.default} * 100%",
              "fontFamily": "{semantic.fontFamily.heading}",
              "fontWeight": "{semantic.fontWeight.heading.subtle}",
              "fontSize": "{semantic.fontSize.h6}",
              "paragraphSpacing": "{semantic.paragraphSpacing.default}",
              "textDecoration": "{semantic.textDecoration.default}",
              "textCase": "{semantic.textCase.default}",
              "paragraphIndent": "{semantic.paragraphIndent.default}"
            },
            "type": "typography",
            "description": "Subtle (typically lighter/regular weight) typography style for level 6 headings (h6)."
          }
        },
        "h5": {
          "default": {
            "value": {
              "letterSpacing": "{semantic.letterSpacing.unitless.heading.default} * 100%",
              "lineHeight": "{semantic.lineHeight.unitless.heading.default} * 100%",
              "fontFamily": "{semantic.fontFamily.heading}",
              "fontWeight": "{semantic.fontWeight.heading.default}",
              "fontSize": "{semantic.fontSize.h5}",
              "paragraphSpacing": "{semantic.paragraphSpacing.default}",
              "textDecoration": "{semantic.textDecoration.default}",
              "textCase": "{semantic.textCase.default}",
              "paragraphIndent": "{semantic.paragraphIndent.default}"
            },
            "type": "typography",
            "description": "Default typography style for level 5 headings (h5)."
          },
          "emphasis": {
            "value": {
              "letterSpacing": "{semantic.letterSpacing.unitless.heading.tight} * 100%",
              "lineHeight": "{semantic.lineHeight.unitless.heading.default} * 100%",
              "fontFamily": "{semantic.fontFamily.heading}",
              "fontWeight": "{semantic.fontWeight.heading.emphasis}",
              "fontSize": "{semantic.fontSize.h5}",
              "paragraphSpacing": "{semantic.paragraphSpacing.default}",
              "textDecoration": "{semantic.textDecoration.default}",
              "textCase": "{semantic.textCase.default}",
              "paragraphIndent": "{semantic.paragraphIndent.default}"
            },
            "type": "typography",
            "description": "Emphasized (typically bolder) typography style for level 5 headings (h5)."
          },
          "subtle": {
            "value": {
              "letterSpacing": "{semantic.letterSpacing.unitless.heading.relaxed} * 100%",
              "lineHeight": "{semantic.lineHeight.unitless.heading.default} * 100%",
              "fontFamily": "{semantic.fontFamily.heading}",
              "fontWeight": "{semantic.fontWeight.heading.subtle}",
              "fontSize": "{semantic.fontSize.h5}",
              "paragraphSpacing": "{semantic.paragraphSpacing.default}",
              "textDecoration": "{semantic.textDecoration.default}",
              "textCase": "{semantic.textCase.default}",
              "paragraphIndent": "{semantic.paragraphIndent.default}"
            },
            "type": "typography",
            "description": "Subtle (typically lighter/regular weight) typography style for level 5 headings (h5)."
          }
        },
        "h4": {
          "default": {
            "value": {
              "letterSpacing": "{semantic.letterSpacing.unitless.heading.default} * 100%",
              "lineHeight": "{semantic.lineHeight.unitless.heading.default} * 100%",
              "fontFamily": "{semantic.fontFamily.heading}",
              "fontWeight": "{semantic.fontWeight.heading.default}",
              "fontSize": "{semantic.fontSize.h4}",
              "paragraphSpacing": "{semantic.paragraphSpacing.default}",
              "textDecoration": "{semantic.textDecoration.default}",
              "textCase": "{semantic.textCase.default}",
              "paragraphIndent": "{semantic.paragraphIndent.default}"
            },
            "type": "typography",
            "description": "Default typography style for level 4 headings (h4)."
          },
          "emphasis": {
            "value": {
              "letterSpacing": "{semantic.letterSpacing.unitless.heading.tight} * 100%",
              "lineHeight": "{semantic.lineHeight.unitless.heading.default} * 100%",
              "fontFamily": "{semantic.fontFamily.heading}",
              "fontWeight": "{semantic.fontWeight.heading.emphasis}",
              "fontSize": "{semantic.fontSize.h4}",
              "paragraphSpacing": "{semantic.paragraphSpacing.default}",
              "textDecoration": "{semantic.textDecoration.default}",
              "textCase": "{semantic.textCase.default}",
              "paragraphIndent": "{semantic.paragraphIndent.default}"
            },
            "type": "typography",
            "description": "Emphasized (typically bolder) typography style for level 4 headings (h4)."
          },
          "subtle": {
            "value": {
              "letterSpacing": "{semantic.letterSpacing.unitless.heading.relaxed} * 100%",
              "lineHeight": "{semantic.lineHeight.unitless.heading.default} * 100%",
              "fontFamily": "{semantic.fontFamily.heading}",
              "fontWeight": "{semantic.fontWeight.heading.subtle}",
              "fontSize": "{semantic.fontSize.h4}",
              "paragraphSpacing": "{semantic.paragraphSpacing.default}",
              "textDecoration": "{semantic.textDecoration.default}",
              "textCase": "{semantic.textCase.default}",
              "paragraphIndent": "{semantic.paragraphIndent.default}"
            },
            "type": "typography",
            "description": "Subtle (typically lighter/regular weight) typography style for level 4 headings (h4)."
          }
        },
        "h3": {
          "default": {
            "value": {
              "letterSpacing": "{semantic.letterSpacing.unitless.heading.default} * 100%",
              "lineHeight": "{semantic.lineHeight.unitless.heading.default} * 100%",
              "fontFamily": "{semantic.fontFamily.heading}",
              "fontWeight": "{semantic.fontWeight.heading.default}",
              "fontSize": "{semantic.fontSize.h3}",
              "paragraphSpacing": "{semantic.paragraphSpacing.default}",
              "textDecoration": "{semantic.textDecoration.default}",
              "textCase": "{semantic.textCase.default}",
              "paragraphIndent": "{semantic.paragraphIndent.default}"
            },
            "type": "typography",
            "description": "Default typography style for level 3 headings (h3).\n"
          },
          "emphasis": {
            "value": {
              "letterSpacing": "{semantic.letterSpacing.unitless.heading.tight} * 100%",
              "lineHeight": "{semantic.lineHeight.unitless.heading.default} * 100%",
              "fontFamily": "{semantic.fontFamily.heading}",
              "fontWeight": "{semantic.fontWeight.heading.emphasis}",
              "fontSize": "{semantic.fontSize.h3}",
              "paragraphSpacing": "{semantic.paragraphSpacing.default}",
              "textDecoration": "{semantic.textDecoration.default}",
              "textCase": "{semantic.textCase.default}",
              "paragraphIndent": "{semantic.paragraphIndent.default}"
            },
            "type": "typography",
            "description": "Emphasized (typically bolder) typography style for level 3 headings (h3)."
          },
          "subtle": {
            "value": {
              "letterSpacing": "{semantic.letterSpacing.unitless.heading.relaxed} * 100%",
              "lineHeight": "{semantic.lineHeight.unitless.heading.default} * 100%",
              "fontFamily": "{semantic.fontFamily.heading}",
              "fontWeight": "{semantic.fontWeight.heading.subtle}",
              "fontSize": "{semantic.fontSize.h3}",
              "paragraphSpacing": "{semantic.paragraphSpacing.default}",
              "textDecoration": "{semantic.textDecoration.default}",
              "textCase": "{semantic.textCase.default}",
              "paragraphIndent": "{semantic.paragraphIndent.default}"
            },
            "type": "typography",
            "description": "Subtle (typically lighter/regular weight) typography style for level 3 headings (h3)."
          }
        },
        "h2": {
          "default": {
            "value": {
              "letterSpacing": "{semantic.letterSpacing.unitless.heading.tight} * 100%",
              "lineHeight": "{semantic.lineHeight.unitless.heading.default} * 100%",
              "fontFamily": "{semantic.fontFamily.heading}",
              "fontWeight": "{semantic.fontWeight.heading.default}",
              "fontSize": "{semantic.fontSize.h2}",
              "paragraphSpacing": "{semantic.paragraphSpacing.default}",
              "textDecoration": "{semantic.textDecoration.default}",
              "textCase": "{semantic.textCase.default}",
              "paragraphIndent": "{semantic.paragraphIndent.default}"
            },
            "type": "typography",
            "description": "Default typography style for level 2 headings (h2)."
          },
          "emphasis": {
            "value": {
              "letterSpacing": "{semantic.letterSpacing.unitless.heading.tighter} * 100%",
              "lineHeight": "{semantic.lineHeight.unitless.heading.default} * 100%",
              "fontFamily": "{semantic.fontFamily.heading}",
              "fontWeight": "{semantic.fontWeight.heading.emphasis}",
              "fontSize": "{semantic.fontSize.h2}",
              "paragraphSpacing": "{semantic.paragraphSpacing.default}",
              "textDecoration": "{semantic.textDecoration.default}",
              "textCase": "{semantic.textCase.default}",
              "paragraphIndent": "{semantic.paragraphIndent.default}"
            },
            "type": "typography",
            "description": "Emphasized (typically bolder) typography style for level 2 headings (h2)."
          },
          "subtle": {
            "value": {
              "letterSpacing": "{semantic.letterSpacing.unitless.heading.default} * 100%",
              "lineHeight": "{semantic.lineHeight.unitless.heading.default} * 100%",
              "fontFamily": "{semantic.fontFamily.heading}",
              "fontWeight": "{semantic.fontWeight.heading.subtle}",
              "fontSize": "{semantic.fontSize.h2}",
              "paragraphSpacing": "{semantic.paragraphSpacing.default}",
              "textDecoration": "{semantic.textDecoration.default}",
              "textCase": "{semantic.textCase.default}",
              "paragraphIndent": "{semantic.paragraphIndent.default}"
            },
            "type": "typography",
            "description": "Subtle (typically lighter/regular weight) typography style for level 2 headings (h2)."
          }
        },
        "h1": {
          "default": {
            "value": {
              "letterSpacing": "{semantic.letterSpacing.unitless.heading.tight} * 100%",
              "lineHeight": "{semantic.lineHeight.unitless.heading.default} * 100%",
              "fontFamily": "{semantic.fontFamily.heading}",
              "fontWeight": "{semantic.fontWeight.heading.default}",
              "fontSize": "{semantic.fontSize.h1}",
              "paragraphSpacing": "{semantic.paragraphSpacing.default}",
              "textDecoration": "{semantic.textDecoration.default}",
              "textCase": "{semantic.textCase.default}",
              "paragraphIndent": "{semantic.paragraphIndent.default}"
            },
            "type": "typography",
            "description": "Default typography style for level 1 headings (h1)."
          },
          "emphasis": {
            "value": {
              "letterSpacing": "{semantic.letterSpacing.unitless.heading.tighter} * 100%",
              "lineHeight": "{semantic.lineHeight.unitless.heading.default} * 100%",
              "fontFamily": "{semantic.fontFamily.heading}",
              "fontWeight": "{semantic.fontWeight.heading.emphasis}",
              "fontSize": "{semantic.fontSize.h1}",
              "paragraphSpacing": "{semantic.paragraphSpacing.default}",
              "textDecoration": "{semantic.textDecoration.default}",
              "textCase": "{semantic.textCase.default}",
              "paragraphIndent": "{semantic.paragraphIndent.default}"
            },
            "type": "typography",
            "description": "Emphasized (typically bolder) typography style for level 1 headings (h1)."
          },
          "subtle": {
            "value": {
              "letterSpacing": "{semantic.letterSpacing.unitless.heading.default} * 100%",
              "lineHeight": "{semantic.lineHeight.unitless.heading.default} * 100%",
              "fontFamily": "{semantic.fontFamily.heading}",
              "fontWeight": "{semantic.fontWeight.heading.subtle}",
              "fontSize": "{semantic.fontSize.h2}",
              "paragraphSpacing": "{semantic.paragraphSpacing.default}",
              "textDecoration": "{semantic.textDecoration.default}",
              "textCase": "{semantic.textCase.default}",
              "paragraphIndent": "{semantic.paragraphIndent.default}"
            },
            "type": "typography",
            "description": "Subtle (typically lighter/regular weight) typography style for level 1 headings (h1)."
          }
        },
        "d3": {
          "default": {
            "value": {
              "letterSpacing": "{semantic.letterSpacing.unitless.heading.tight} * 100%",
              "lineHeight": "{semantic.lineHeight.unitless.heading.default} * 100%",
              "fontFamily": "{semantic.fontFamily.heading}",
              "fontWeight": "{semantic.fontWeight.heading.default}",
              "fontSize": "{semantic.fontSize.d3}",
              "paragraphSpacing": "{semantic.paragraphSpacing.default}",
              "textDecoration": "{semantic.textDecoration.default}",
              "textCase": "{semantic.textCase.default}",
              "paragraphIndent": "{semantic.paragraphIndent.default}"
            },
            "type": "typography",
            "description": "Default style for level 3 display headings (d3), used for large, impactful typographic statements, often in marketing or hero sections (smallest display size)."
          },
          "emphasis": {
            "value": {
              "letterSpacing": "{semantic.letterSpacing.unitless.heading.tighter} * 100%",
              "lineHeight": "{semantic.lineHeight.unitless.heading.default} * 100%",
              "fontFamily": "{semantic.fontFamily.heading}",
              "fontWeight": "{semantic.fontWeight.heading.emphasis}",
              "fontSize": "{semantic.fontSize.d3}",
              "paragraphSpacing": "{semantic.paragraphSpacing.default}",
              "textDecoration": "{semantic.textDecoration.default}",
              "textCase": "{semantic.textCase.default}",
              "paragraphIndent": "{semantic.paragraphIndent.default}"
            },
            "type": "typography",
            "description": "Bolder style for d3 display headings, increasing visual weight for impactful statements."
          },
          "subtle": {
            "value": {
              "letterSpacing": "{semantic.letterSpacing.unitless.heading.default} * 100%",
              "lineHeight": "{semantic.lineHeight.unitless.heading.default} * 100%",
              "fontFamily": "{semantic.fontFamily.heading}",
              "fontWeight": "{semantic.fontWeight.heading.subtle}",
              "fontSize": "{semantic.fontSize.d3}",
              "paragraphSpacing": "{semantic.paragraphSpacing.default}",
              "textDecoration": "{semantic.textDecoration.default}",
              "textCase": "{semantic.textCase.default}",
              "paragraphIndent": "{semantic.paragraphIndent.default}"
            },
            "type": "typography",
            "description": "Lighter/regular weight style for d3 display headings, offering a less heavy option for large statements."
          }
        },
        "d2": {
          "default": {
            "value": {
              "letterSpacing": "{semantic.letterSpacing.unitless.heading.tight} * 100%",
              "lineHeight": "{semantic.lineHeight.unitless.heading.default} * 100%",
              "fontFamily": "{semantic.fontFamily.heading}",
              "fontWeight": "{semantic.fontWeight.heading.default}",
              "fontSize": "{semantic.fontSize.d2}",
              "paragraphSpacing": "{semantic.paragraphSpacing.default}",
              "textDecoration": "{semantic.textDecoration.default}",
              "textCase": "{semantic.textCase.default}",
              "paragraphIndent": "{semantic.paragraphIndent.default}"
            },
            "type": "typography",
            "description": "Default style for level 2 display headings (d2), used for very large typographic statements in marketing or hero sections."
          },
          "emphasis": {
            "value": {
              "letterSpacing": "{semantic.letterSpacing.unitless.heading.tighter} * 100%",
              "lineHeight": "{semantic.lineHeight.unitless.heading.default} * 100%",
              "fontFamily": "{semantic.fontFamily.heading}",
              "fontWeight": "{semantic.fontWeight.heading.emphasis}",
              "fontSize": "{semantic.fontSize.d2}",
              "paragraphSpacing": "{semantic.paragraphSpacing.default}",
              "textDecoration": "{semantic.textDecoration.default}",
              "textCase": "{semantic.textCase.default}",
              "paragraphIndent": "{semantic.paragraphIndent.default}"
            },
            "type": "typography",
            "description": "Bolder style for d2 display headings, maximizing visual weight for key statements."
          },
          "subtle": {
            "value": {
              "letterSpacing": "{semantic.letterSpacing.unitless.heading.default} * 100%",
              "lineHeight": "{semantic.lineHeight.unitless.heading.default} * 100%",
              "fontFamily": "{semantic.fontFamily.heading}",
              "fontWeight": "{semantic.fontWeight.heading.subtle}",
              "fontSize": "{semantic.fontSize.d2}",
              "paragraphSpacing": "{semantic.paragraphSpacing.default}",
              "textDecoration": "{semantic.textDecoration.default}",
              "textCase": "{semantic.textCase.default}",
              "paragraphIndent": "{semantic.paragraphIndent.default}"
            },
            "type": "typography",
            "description": "Lighter/regular weight style for d2 display headings, providing a lighter alternative for major typographic moments."
          }
        },
        "d1": {
          "default": {
            "value": {
              "letterSpacing": "{semantic.letterSpacing.unitless.heading.tight} * 100%",
              "lineHeight": "{semantic.lineHeight.unitless.heading.default} * 100%",
              "fontFamily": "{semantic.fontFamily.heading}",
              "fontWeight": "{semantic.fontWeight.heading.default}",
              "fontSize": "{semantic.fontSize.d1}",
              "paragraphSpacing": "{semantic.paragraphSpacing.default}",
              "textDecoration": "{semantic.textDecoration.default}",
              "textCase": "{semantic.textCase.default}",
              "paragraphIndent": "{semantic.paragraphIndent.default}"
            },
            "type": "typography",
            "description": "Default style for the largest display headings (d1), used for primary, highly impactful typographic statements, typically in hero sections (largest display size)."
          },
          "emphasis": {
            "value": {
              "letterSpacing": "{semantic.letterSpacing.unitless.heading.tighter} * 100%",
              "lineHeight": "{semantic.lineHeight.unitless.heading.default} * 100%",
              "fontFamily": "{semantic.fontFamily.heading}",
              "fontWeight": "{semantic.fontWeight.heading.emphasis}",
              "fontSize": "{semantic.fontSize.d1}",
              "paragraphSpacing": "{semantic.paragraphSpacing.default}",
              "textDecoration": "{semantic.textDecoration.default}",
              "textCase": "{semantic.textCase.default}",
              "paragraphIndent": "{semantic.paragraphIndent.default}"
            },
            "type": "typography",
            "description": "Bolder style for d1 display headings, for maximum visual impact and weight."
          },
          "subtle": {
            "value": {
              "letterSpacing": "{semantic.letterSpacing.unitless.heading.default} * 100%",
              "lineHeight": "{semantic.lineHeight.unitless.heading.default} * 100%",
              "fontFamily": "{semantic.fontFamily.heading}",
              "fontWeight": "{semantic.fontWeight.heading.subtle}",
              "fontSize": "{semantic.fontSize.d1}",
              "paragraphSpacing": "{semantic.paragraphSpacing.default}",
              "textDecoration": "{semantic.textDecoration.default}",
              "textCase": "{semantic.textCase.default}",
              "paragraphIndent": "{semantic.paragraphIndent.default}"
            },
            "type": "typography",
            "description": "Lighter/regular weight style for d1 display headings, offering a refined option for the largest typographic statements."
          }
        },
        "interactive": {
          "default": {
            "small": {
              "value": {
                "fontFamily": "{semantic.fontFamily.body}",
                "fontWeight": "{semantic.fontWeight.body.default}",
                "fontSize": "{semantic.fontSize.p3}",
                "lineHeight": "{semantic.lineHeight.unitless.heading.default} * 100%",
                "letterSpacing": "{semantic.letterSpacing.unitless.paragraph.default} * 100%",
                "paragraphSpacing": "{semantic.paragraphSpacing.default}",
                "paragraphIndent": "{semantic.paragraphIndent.default}",
                "textDecoration": "{semantic.textDecoration.default}",
                "textCase": "{semantic.textCase.default}"
              },
              "type": "typography",
              "description": "Font metrics (size, default weight, line height, etc.) for small interactive UI elements like small labels, controls, or compact button text. Color and specific decoration applied separately."
            },
            "medium": {
              "value": {
                "fontFamily": "{semantic.fontFamily.body}",
                "fontWeight": "{semantic.fontWeight.body.default}",
                "fontSize": "{semantic.fontSize.p2}",
                "lineHeight": "{semantic.lineHeight.unitless.heading.relaxed} * 100%",
                "letterSpacing": "{semantic.letterSpacing.unitless.paragraph.default} * 100%",
                "paragraphSpacing": "{semantic.paragraphSpacing.default}",
                "paragraphIndent": "{semantic.paragraphIndent.default}",
                "textDecoration": "{semantic.textDecoration.default}",
                "textCase": "{semantic.textCase.default}"
              },
              "type": "typography",
              "description": "Font metrics for standard-sized interactive UI elements (e.g., default button text, standard control labels). Color and specific decoration applied separately."
            },
            "large": {
              "value": {
                "fontFamily": "{semantic.fontFamily.body}",
                "fontWeight": "{semantic.fontWeight.body.default}",
                "fontSize": "{semantic.fontSize.p1}",
                "lineHeight": "{semantic.lineHeight.unitless.heading.relaxed} * 100%",
                "letterSpacing": "{semantic.letterSpacing.unitless.heading.tight}",
                "paragraphSpacing": "{semantic.paragraphSpacing.default}",
                "paragraphIndent": "{semantic.paragraphIndent.default}",
                "textDecoration": "{semantic.textDecoration.default}",
                "textCase": "{semantic.textCase.default}"
              },
              "type": "typography",
              "description": "Font metrics for large interactive UI elements (e.g., large button text). Color and specific decoration applied separately."
            }
          },
          "strong": {
            "small": {
              "value": {
                "fontFamily": "{semantic.fontFamily.body}",
                "fontWeight": "{semantic.fontWeight.body.emphasis}",
                "fontSize": "{semantic.fontSize.p3}",
                "lineHeight": "{semantic.lineHeight.unitless.heading.default} * 100%",
                "letterSpacing": "{semantic.letterSpacing.unitless.paragraph.default} * 100%",
                "paragraphSpacing": "{semantic.paragraphSpacing.default}",
                "paragraphIndent": "{semantic.paragraphIndent.default}",
                "textDecoration": "{semantic.textDecoration.default}",
                "textCase": "{semantic.textCase.default}"
              },
              "type": "typography",
              "description": "Emphasized weight font metrics for small interactive UI elements where increased prominence is needed (e.g., primary small button text). Color and specific decoration applied separately."
            },
            "medium": {
              "value": {
                "fontFamily": "{semantic.fontFamily.body}",
                "fontWeight": "{semantic.fontWeight.body.emphasis}",
                "fontSize": "{semantic.fontSize.p2}",
                "lineHeight": "{semantic.lineHeight.unitless.heading.relaxed} * 100%",
                "letterSpacing": "{semantic.letterSpacing.unitless.paragraph.default} * 100%",
                "paragraphSpacing": "{semantic.paragraphSpacing.default}",
                "paragraphIndent": "{semantic.paragraphIndent.default}",
                "textDecoration": "{semantic.textDecoration.default}",
                "textCase": "{semantic.textCase.default}"
              },
              "type": "typography",
              "description": "Emphasized weight font metrics for standard-sized interactive elements requiring emphasis (e.g., primary button text). Color and specific decoration applied separately."
            },
            "large": {
              "value": {
                "fontFamily": "{semantic.fontFamily.body}",
                "fontWeight": "{semantic.fontWeight.body.emphasis}",
                "fontSize": "{semantic.fontSize.p1}",
                "lineHeight": "{semantic.lineHeight.unitless.heading.relaxed} * 100%",
                "letterSpacing": "{semantic.letterSpacing.unitless.heading.tight}",
                "paragraphSpacing": "{semantic.paragraphSpacing.default}",
                "paragraphIndent": "{semantic.paragraphIndent.default}",
                "textDecoration": "{semantic.textDecoration.default}",
                "textCase": "{semantic.textCase.default}"
              },
              "type": "typography",
              "description": "Emphasized weight font metrics for large interactive elements needing high visibility (e.g., primary large button text). Color and specific decoration applied separately."
            }
          }
        }
      },
      "fontSize": {
        "p4": {
          "value": "{scale.rem.xs}",
          "type": "fontSizes",
          "description": "Part of typography. Rare, use for extra-small, non-essential text like legal disclaimers or tiny metadata where space is highly constrained. Non-readable"
        },
        "p3": {
          "value": "{scale.rem.sm}",
          "type": "fontSizes",
          "description": "Part of typography. Use for small supporting text: captions, metadata, helper text below inputs, small labels."
        },
        "p2": {
          "value": "{scale.rem.md}",
          "type": "fontSizes",
          "description": "Part of typography. The standard workhorse size for body content, descriptions, and primary UI text."
        },
        "p1": {
          "value": "{scale.rem.lg}",
          "type": "fontSizes",
          "description": "Part of typography. Use for lead paragraphs, block quotes, or other larger body text needing emphasis."
        },
        "h6": {
          "value": "{scale.rem.lg}",
          "type": "fontSizes",
          "description": "Part of typography. The smallest heading level, for fine-grained sectioning within components or detailed content."
        },
        "h5": {
          "value": "{scale.rem.xl}",
          "type": "fontSizes",
          "description": "Part of typography. For sub-sections within components like cards, or for grouping related controls."
        },
        "h4": {
          "value": "{scale.rem.2xl}",
          "type": "fontSizes",
          "description": "Part of typography. For distinct sections within a page region or complex component; provides clear visual grouping."
        },
        "h3": {
          "value": "{scale.rem.3xl}",
          "type": "fontSizes",
          "description": "Part of typography. For major content sections or titles of significant UI modules."
        },
        "h2": {
          "value": "{scale.rem.4xl}",
          "type": "fontSizes",
          "description": "Part of typography. For primary page sections or secondary page titles, establishing major divisions.\n"
        },
        "h1": {
          "value": "{scale.rem.5xl}",
          "type": "fontSizes",
          "description": "Part of typography. Primarily reserved for the main title of a page or view."
        },
        "d3": {
          "value": "{scale.rem.6xl}",
          "type": "fontSizes",
          "description": "Part of typography. The smallest display size, for impactful but secondary headlines in marketing or feature areas."
        },
        "d2": {
          "value": "{scale.rem.7xl}",
          "type": "fontSizes",
          "description": "Part of typography. A large display size for key marketing headlines or significant feature titles."
        },
        "d1": {
          "value": "{scale.rem.8xl}",
          "type": "fontSizes",
          "description": "Part of typopgraphy. The largest display size, reserved for primary hero messaging or major branding moments."
        }
      },
      "lineHeight": {
        "unitless": {
          "paragraph": {
            "tight": {
              "value": "1.4",
              "type": "number",
              "description": "Part of typography. Use for large headings (especially display sizes) to reduce excess space between lines and improve visual cohesion."
            },
            "default": {
              "value": "1.5",
              "type": "number",
              "description": "Part of typography. Optimal line height for readability of standard body text blocks."
            },
            "relaxed": {
              "value": "1.6",
              "type": "number",
              "description": "Part of typography. Use for a more open, airy feel in body text, improving readability for some users or contexts."
            }
          },
          "heading": {
            "tight": {
              "value": "1.1",
              "type": "number",
              "description": "Part of typography. Use for large headings (especially display sizes) to reduce excess space between lines and improve visual cohesion. "
            },
            "default": {
              "value": "1.2",
              "type": "number"
            },
            "relaxed": {
              "value": "1.3",
              "type": "number",
              "description": "Part of typography. Use when extra space is desired around headings for visual separation or style."
            }
          }
        }
      },
      "letterSpacing": {
        "unitless": {
          "paragraph": {
            "default": {
              "value": "0",
              "type": "number",
              "description": "Part of typography. Standard letter spacing for optimal readability in body text (usually 0). em units"
            },
            "relaxed": {
              "value": "0.025",
              "type": "number",
              "description": "em units"
            }
          },
          "heading": {
            "tighter": {
              "value": "-0.04",
              "type": "number",
              "description": "Part of typography. Apply to very large display headings (d1, d2) to optically tighten spacing for visual appeal. em units."
            },
            "tight": {
              "value": "-0.03",
              "type": "number",
              "description": "Part of typography. Apply to large headings (h1, h2, d3) for improved visual density and impact.. em units"
            },
            "default": {
              "value": "-0.02",
              "type": "number",
              "description": "Part of typography. Standard (often slightly negative) spacing for most headings (h3-h6) to enhance cohesion. em units"
            },
            "relaxed": {
              "value": "0",
              "type": "number",
              "description": "Part of typography. Use for headings needing an open, airy feel, or potentially for all-caps headings (usually 0 or slightly positive). em units"
            }
          }
        }
      },
      "NOTES": {
        "Accessibility": {
          "text-spacing": {
            "value": "Success criteria",
            "type": "other",
            "description": "Line height (line spacing) to at least 1.5 times the font size;\nSpacing following paragraphs to at least 2 times the font size;\nLetter spacing (tracking) to at least 0.12 times the font size;\nWord spacing to at least 0.16 times the font size.\n\nSource \nhttps://www.w3.org/WAI/WCAG21/Understanding/text-spacing.html"
          }
        },
        "unitless-text-properties": {
          "value": "written for Figma",
          "type": "other",
          "description": "The unitless version of these properties are written this way because Figma doesn't support the preferred units, which are added to the description of the token if needed. \n\nFor properties like lineHeight and letterSpacing which Figma only supports in percentage, an equation will be added in the typography composite token to support a smooth representation in Figma, however, they are to be coded in their preferred unit (em, unitless etc). "
        }
      },
      "size": {
        "web": {
          "breakpoint": {
            "s": {
              "value": "576",
              "type": "sizing",
              "description": "Defines the upper boundary (max-width) for the smallest screen size layout (e.g., mobile portrait)."
            },
            "m": {
              "value": "768",
              "type": "sizing",
              "description": "Defines the upper boundary for medium screen layouts (e.g., tablet portrait/landscape)."
            },
            "l": {
              "value": "1024",
              "type": "sizing",
              "description": "Defines the upper boundary for standard desktop screen layouts."
            },
            "xl": {
              "value": "1200",
              "type": "sizing",
              "description": "Defines the upper boundary for large desktop screen layouts."
            },
            "xxl": {
              "value": "1400",
              "type": "sizing"
            }
          },
          "columns": {
            "s": {
              "value": "4",
              "type": "sizing",
              "description": "Specifies the number of grid columns available in the small breakpoint layout."
            },
            "m": {
              "value": "8",
              "type": "sizing",
              "description": "Specifies the number of grid columns available in the medium breakpoint layout."
            },
            "l": {
              "value": "12",
              "type": "sizing",
              "description": "Specifies the number of grid columns available in the large (and above) breakpoint layout."
            }
          }
        },
        "icon": {
          "s": {
            "value": "{global.dimension.100}",
            "type": "sizing",
            "description": "Size for small, often inline or incidental icons.\n"
          },
          "m": {
            "value": "{global.dimension.150}",
            "type": "sizing",
            "description": "Standard icon size used alongside regular text or in controls.\n"
          },
          "l": {
            "value": "{global.dimension.250}",
            "type": "sizing",
            "description": "Size for larger, more prominent icons, perhaps in illustrations or section headers."
          },
          "xl": {
            "value": "{global.dimension.500}",
            "type": "sizing",
            "description": "Size for extra-large icons used for significant visual impact or empty states.\n"
          }
        },
        "selectable": {
          "xs": {
            "value": "{global.dimension.100}",
            "type": "sizing",
            "description": "Height/width for extra-small, dense controls like compact buttons or icon-only buttons."
          },
          "s": {
            "value": "{global.dimension.200}",
            "type": "sizing",
            "description": "Height/width for small controls like small buttons or input fields in compact areas."
          },
          "m": {
            "value": "{global.dimension.300}",
            "type": "sizing",
            "description": "Standard height/width for default buttons, input fields, and other interactive controls."
          },
          "l": {
            "value": "{global.dimension.400}",
            "type": "sizing",
            "description": "Height/width for large, prominent controls like primary call-to-action buttons."
          },
          "xl": {
            "value": "{global.dimension.500}",
            "type": "sizing",
            "description": "Height/width for extra-large controls used in high-emphasis situations or specific layouts."
          }
        }
      },
      "space": {
        "page": {
          "inset": {
            "none": {
              "value": "{global.dimension.0}",
              "type": "spacing",
              "description": "Use for full-bleed layouts where content extends to the viewport edge."
            },
            "s": {
              "value": "{global.dimension.100}",
              "type": "spacing",
              "description": "Minimum safe area padding for small screens."
            },
            "m": {
              "value": "{global.dimension.150}",
              "type": "spacing",
              "description": "Standard page padding for medium screens/tablets."
            },
            "l": {
              "value": "{global.dimension.200}",
              "type": "spacing",
              "description": "Standard page padding for typical desktop layouts."
            },
            "xl": {
              "value": "{global.dimension.300}",
              "type": "spacing",
              "description": "Generous page padding for large desktop layouts."
            }
          },
          "inside": {
            "none": {
              "value": "{global.dimension.0}",
              "type": "spacing",
              "description": "Use when page-level columns should touch with no gutter."
            },
            "xxs": {
              "value": "{global.dimension.25}",
              "type": "spacing",
              "description": "Minimal gutter between page-level columns for very dense layouts."
            },
            "xs": {
              "value": "{global.dimension.50}",
              "type": "spacing",
              "description": "Small gutter between page-level columns."
            },
            "s": {
              "value": "{global.dimension.100}",
              "type": "spacing",
              "description": "Standard small gutter between page-level columns."
            },
            "m": {
              "value": "{global.dimension.200}",
              "type": "spacing",
              "description": "Standard medium gutter between page-level columns."
            },
            "l": {
              "value": "{global.dimension.400}",
              "type": "spacing",
              "description": "Standard large gutter between page-level columns."
            },
            "xl": {
              "value": "{global.dimension.800}",
              "type": "spacing",
              "description": "Generous gutter between page-level columns for wide layouts."
            },
            "xxl": {
              "value": "{global.dimension.1600}",
              "type": "spacing",
              "description": "Extra-large gutter for layouts needing significant separation."
            }
          }
        },
        "container": {
          "inset": {
            "none": {
              "value": "{global.dimension.0}",
              "type": "spacing",
              "description": "Use for containers where content should touch the edges (e.g., full-width images in cards)."
            },
            "s": {
              "value": "{global.dimension.100}",
              "type": "spacing",
              "description": "Small padding inside containers like cards, alerts, or modules."
            },
            "m": {
              "value": "{global.dimension.150}",
              "type": "spacing",
              "description": "Standard padding inside containers for balanced content spacing."
            }
          },
          "inside": {
            "none": {
              "value": "{global.dimension.0}",
              "type": "spacing",
              "description": "No gap between elements arranged within a container."
            },
            "xxs": {
              "value": "{global.dimension.12}",
              "type": "spacing",
              "description": "Minimal gap between elements within a container (e.g., tightly packed tags)."
            },
            "xs": {
              "value": "{global.dimension.25}",
              "type": "spacing",
              "description": "Extra-small gap between elements within a container (e.g., icon and text)."
            },
            "s": {
              "value": "{global.dimension.50}",
              "type": "spacing",
              "description": "Small gap between elements within a container (e.g., title and description)."
            },
            "m": {
              "value": "{global.dimension.100}",
              "type": "spacing",
              "description": "Medium gap between major elements within a container."
            },
            "l": {
              "value": "{global.dimension.200}",
              "type": "spacing",
              "description": "Large gap for significant separation between elements within a container."
            }
          },
          "stack": {
            "s": {
              "value": "{global.dimension.100}",
              "type": "spacing",
              "description": "Standard small vertical gap between stacked containers (e.g., cards in a list)."
            },
            "m": {
              "value": "{global.dimension.150}",
              "type": "spacing",
              "description": "Standard medium vertical gap between stacked containers."
            }
          }
        },
        "selectable": {
          "inset": {
            "none": {
              "value": "{global.dimension.0}",
              "type": "spacing",
              "description": "No internal padding within selectable controls (e.g., icon-only buttons)."
            },
            "s": {
              "value": "{global.dimension.50}",
              "type": "spacing",
              "description": "Small horizontal/vertical padding for small/compact selectable controls.\n"
            },
            "m": {
              "value": "{global.dimension.75}",
              "type": "spacing",
              "description": "Standard horizontal/vertical padding for default selectable controls."
            },
            "l": {
              "value": "{global.dimension.100}",
              "type": "spacing",
              "description": "Generous horizontal/vertical padding for large selectable controls."
            },
            "xl": {
              "value": "{global.dimension.150}",
              "type": "spacing",
              "description": "Extra-large padding for oversized selectable controls."
            }
          },
          "inside": {
            "none": {
              "value": "{global.dimension.0}",
              "type": "spacing",
              "description": "No gap between internal elements (icon/text) in selectable controls."
            },
            "xs": {
              "value": "{global.dimension.12}",
              "type": "spacing",
              "description": "Extra-small gap between internal elements in selectable controls."
            },
            "s": {
              "value": "{global.dimension.25}",
              "type": "spacing",
              "description": "Small gap between internal elements in selectable controls."
            },
            "m": {
              "value": "{global.dimension.50}",
              "type": "spacing",
              "description": "Medium gap between internal elements in selectable controls."
            },
            "l": {
              "value": "{global.dimension.100}",
              "type": "spacing",
              "description": "Large gap between internal elements in selectable controls."
            }
          },
          "stack": {
            "s": {
              "value": "{global.dimension.100}",
              "type": "spacing",
              "description": "Standard small vertical/horizontal gap between adjacent selectable controls (e.g., buttons in a group)."
            },
            "m": {
              "value": "{global.dimension.150}",
              "type": "spacing",
              "description": "Standard medium gap between adjacent selectable controls."
            }
          }
        }
      },
      "borderRadius": {
        "scale": {
          "value": "1",
          "type": "borderRadius",
          "description": "I added a scale here to be able to change the roundness of all border-radiuses simultaneously. That can be a very nice mechanism for several other tokens."
        },
        "container": {
          "none": {
            "value": "{semantic.borderRadius.scale} * {global.borderRadius.0}",
            "type": "borderRadius",
            "description": "Use for sharp-cornered containers (0px radius)."
          },
          "s": {
            "value": "{semantic.borderRadius.scale} * {global.borderRadius.50}",
            "type": "borderRadius",
            "description": "Subtle rounding for containers, providing a slightly softer look."
          },
          "m": {
            "value": "{semantic.borderRadius.scale} * {global.borderRadius.100}",
            "type": "borderRadius",
            "description": "Standard rounding for containers like cards and modals."
          },
          "l": {
            "value": "{semantic.borderRadius.scale} * {global.borderRadius.150}",
            "type": "borderRadius",
            "description": "Larger rounding for containers, creating a softer, more prominent rounded style."
          },
          "pill": {
            "value": "{semantic.borderRadius.scale} * {global.borderRadius.pill}",
            "type": "borderRadius",
            "description": "Use to create fully rounded ends on containers, often for tags or capsule shapes."
          }
        },
        "selectable": {
          "m": {
            "value": "{semantic.borderRadius.scale} * {global.borderRadius.25}",
            "type": "borderRadius",
            "description": "Standard rounding for interactive elements like buttons and inputs."
          },
          "pill": {
            "value": "{semantic.borderRadius.scale} * {global.borderRadius.pill}",
            "type": "borderRadius",
            "description": "Use to create fully rounded buttons or input ends."
          }
        }
      },
      "borderWidth": {
        "selectable": {
          "none": {
            "value": "{global.borderWidth.0}",
            "type": "borderWidth",
            "description": "Use when an interactive element should have no visible border (0px width)."
          },
          "m": {
            "value": "{global.borderWidth.20}",
            "type": "borderWidth",
            "description": "Standard border width (typically 1px or 2px) for interactive elements like secondary buttons or input fields."
          }
        }
      },
      "fontFamily": {
        "heading": {
          "value": "{global.fontFamilies.core}",
          "type": "fontFamilies",
          "description": "The designated typeface for all heading elements (h1-h6, d1-d3), chosen for impact and hierarchy.\n"
        },
        "body": {
          "value": "{global.fontFamilies.core}",
          "type": "fontFamilies",
          "description": "The designated typeface for all paragraph and primary UI text, chosen for readability."
        }
      },
      "fontWeight": {
        "heading": {
          "default": {
            "value": "{global.fontWeights.core-medium}",
            "type": "fontWeights",
            "description": "The standard weight for headings, providing clear hierarchy (often Medium or Semibold)."
          },
          "emphasis": {
            "value": "{global.fontWeights.core-bold}",
            "type": "fontWeights",
            "description": "A heavier weight for headings needing extra prominence (often Bold or heavier)."
          },
          "subtle": {
            "value": "{global.fontWeights.core-regular}",
            "type": "fontWeights",
            "description": "A lighter weight for less prominent headings (often Regular or Light)."
          }
        },
        "body": {
          "default": {
            "value": "{global.fontWeights.core-regular}",
            "type": "fontWeights",
            "description": "The standard weight for body text, optimized for reading (often Regular)."
          },
          "emphasis": {
            "value": "{global.fontWeights.core-semibold}",
            "type": "fontWeights",
            "description": "A heavier weight for emphasizing spans of body text or for UI elements needing more weight (often Semibold or Bold)."
          },
          "subtle": {
            "value": "{global.fontWeights.core-regular}",
            "type": "fontWeights",
            "description": "A lighter weight for less important body text (often Light, if available/needed, otherwise Regular)."
          }
        }
      },
      "NOTES-Font-Family-Weight": {
        "value": "Customization",
        "type": "other",
        "description": "If you add a new typeface file with font family/weight, you can remap the tokens in this file and it will change the typography tokens."
      },
      "color": {
        "interactive": {
          "primary": {
            "background": {
              "default": {
                "value": "{semantic.color.brand.primary.default}",
                "type": "color",
                "description": "Default background color for primary interactive elements (e.g., primary buttons)."
              },
              "hover": {
                "value": "{semantic.color.brand.primary.hover}",
                "type": "color",
                "description": "Background color for primary interactive elements when hovered."
              },
              "pressed": {
                "value": "{semantic.color.brand.primary.pressed}",
                "type": "color",
                "description": "Background color for primary interactive elements when pressed/active."
              },
              "disabled": {
                "value": "{semantic.color.brand.primary.default}",
                "type": "color",
                "$extensions": {
                  "studio.tokens": {
                    "modify": {
                      "type": "alpha",
                      "value": "0.4",
                      "space": "lch"
                    }
                  }
                },
                "description": "Background color for disabled primary interactive elements. Often uses transparency."
              }
            },
            "foreground": {
              "default": {
                "value": "{semantic.color.text.onBrand}",
                "type": "color",
                "description": "Default text/icon color used on primary interactive backgrounds. Ensure sufficient contrast."
              }
            }
          },
          "secondary": {
            "unselected": {
              "background": {
                "default": {
                  "value": "{global.color.common.transparent}",
                  "type": "color",
                  "description": "Default background for secondary interactive elements that are not selected (e.g., unselected tabs, default state of secondary buttons). Typically transparent."
                },
                "hover": {
                  "value": "{semantic.color.brand.secondary.hover}",
                  "type": "color",
                  "description": "Background color for unselected secondary interactive elements when hovered."
                },
                "pressed": {
                  "value": "{semantic.color.brand.secondary.pressed}",
                  "type": "color",
                  "description": "Background color for unselected secondary interactive elements when pressed/active."
                },
                "disabled": {
                  "value": "{semantic.color.brand.secondary.default}",
                  "type": "color",
                  "$extensions": {
                    "studio.tokens": {
                      "modify": {
                        "type": "alpha",
                        "value": "0.4",
                        "space": "lch"
                      }
                    }
                  },
                  "description": "Background color for disabled, unselected secondary interactive elements. Often uses transparency or matches disabled background."
                }
              },
              "border": {
                "default": {
                  "value": "{semantic.color.brand.secondary.default}",
                  "type": "color",
                  "description": "Default border color for secondary interactive elements that are not selected (e.g., outline buttons)."
                }
              },
              "foreground": {
                "default": {
                  "value": "{semantic.color.text.secondary}",
                  "type": "color",
                  "description": "Default text/icon color for unselected secondary interactive elements."
                }
              }
            },
            "selected": {
              "background": {
                "default": {
                  "value": "{semantic.color.brand.secondary.default}",
                  "type": "color",
                  "description": "Default background for secondary interactive elements when they are selected (e.g., selected tabs, toggled state)."
                },
                "hover": {
                  "value": "{semantic.color.brand.secondary.hover}",
                  "type": "color",
                  "description": "Background color for selected secondary interactive elements when pressed/active."
                },
                "pressed": {
                  "value": "{semantic.color.brand.secondary.pressed}",
                  "type": "color"
                },
                "disabled": {
                  "value": "{semantic.color.brand.secondary.default}",
                  "type": "color",
                  "$extensions": {
                    "studio.tokens": {
                      "modify": {
                        "type": "alpha",
                        "value": "0.4",
                        "space": "lch"
                      }
                    }
                  },
                  "description": "Background color for disabled, selected secondary interactive elements."
                }
              },
              "border": {
                "default": {
                  "value": "{semantic.color.brand.secondary.default}",
                  "type": "color",
                  "description": "Default border color for selected secondary interactive elements (if applicable)."
                }
              },
              "foreground": {
                "default": {
                  "value": "{semantic.color.text.onBrand}",
                  "type": "color",
                  "description": "Default text/icon color for selected secondary interactive elements."
                }
              }
            }
          },
          "tertiary": {
            "unselected": {
              "background": {
                "default": {
                  "value": "{global.color.common.transparent}",
                  "type": "color",
                  "description": "Default background for tertiary interactive elements (e.g., text links, ghost buttons) when unselected. Almost always transparent."
                },
                "hover": {
                  "value": "{global.color.common.transparent}",
                  "type": "color",
                  "description": "Background color for unselected tertiary interactive elements when hovered (often transparent or a very subtle wash)."
                },
                "pressed": {
                  "value": "{global.color.common.transparent}",
                  "type": "color",
                  "description": "Background color for unselected tertiary interactive elements when pressed (often transparent or a very subtle wash)."
                },
                "disabled": {
                  "value": "{global.color.common.transparent}",
                  "type": "color",
                  "description": "Background color for disabled, unselected tertiary interactive elements (transparent)."
                }
              },
              "foreground": {
                "default": {
                  "value": "{semantic.color.link.default}",
                  "type": "color",
                  "description": "Default text/icon color for unselected tertiary interactive elements (typically the link color)."
                }
              }
            },
            "selected": {
              "background": {
                "default": {
                  "value": "{global.color.common.transparent}",
                  "type": "color",
                  "description": "Default background for tertiary interactive elements when selected (if applicable, usually transparent)."
                },
                "hover": {
                  "value": "{global.color.common.transparent}",
                  "type": "color",
                  "description": "Background color for selected tertiary interactive elements when hovered (if applicable)."
                },
                "pressed": {
                  "value": "{global.color.common.transparent}",
                  "type": "color",
                  "description": "Background color for selected tertiary interactive elements when pressed (if applicable)."
                },
                "disabled": {
                  "value": "{global.color.common.transparent}",
                  "type": "color",
                  "description": "Background color for disabled, selected tertiary interactive elements (if applicable)."
                }
              },
              "foreground": {
                "default": {
                  "value": "{semantic.color.link.default}",
                  "type": "color",
                  "description": "Default text/icon color for selected tertiary interactive elements (if applicable)."
                }
              }
            }
          }
        },
        "brand": {
          "primary": {
            "default": {
              "value": "{global.color.orange.400}",
              "type": "color",
              "description": "The core brand color used as the base for primary actions and highlights.\n"
            },
            "hover": {
              "value": "{global.color.orange.300}",
              "type": "color",
              "description": "Represents the hover state color for primary brand elements. The actual color value MUST be defined/overridden in the specific product theme set, typically a slightly lighter variant of the primary default color."
            },
            "pressed": {
              "value": "{global.color.orange.500}",
              "type": "color",
              "description": "Represents the pressed/active state color for primary brand elements. The actual color value MUST be defined/overridden in the specific product theme set. Usually darker variant of default"
            },
            "disabled": {
              "value": "{semantic.color.brand.primary.default}",
              "type": "color",
              "$extensions": {
                "studio.tokens": {
                  "modify": {
                    "type": "alpha",
                    "value": "0.4",
                    "space": "lch"
                  }
                }
              },
              "description": "The effective color/appearance for disabled primary brand elements (often derived via opacity)."
            }
          },
          "secondary": {
            "default": {
              "value": "{global.color.orange.300}",
              "type": "color",
              "description": "The core brand color used as the base for secondary actions and elements."
            },
            "hover": {
              "value": "{global.color.orange.300}",
              "type": "color",
              "description": "The brand color variant used for hover states on secondary elements."
            },
            "pressed": {
              "value": "{global.color.orange.500}",
              "type": "color",
              "description": "The brand color variant used for pressed states on secondary elements."
            },
            "disabled": {
              "value": "{semantic.color.interactive.primary.background.default}",
              "type": "color",
              "$extensions": {
                "studio.tokens": {
                  "modify": {
                    "type": "alpha",
                    "value": "0.4",
                    "space": "lch"
                  }
                }
              },
              "description": "The effective color/appearance for disabled secondary brand elements (often derived via opacity)."
            }
          }
        },
        "background": {
          "default": {
            "value": "{global.color.common.white}",
            "type": "color",
            "description": "The primary background color for the overall page or main content areas (typically white in light mode)."
          },
          "subtle": {
            "value": "{global.color.neutral.100}",
            "type": "color",
            "description": "A slightly off-default background color used for subtle differentiation, like card backgrounds, sidebars, or grouped sections (typically light gray in light mode)."
          }
        },
        "text": {
          "primary": {
            "value": "{global.color.neutral.1000}",
            "type": "color",
            "description": "Primary text color for high contrast readability. Override for dark themes."
          },
          "secondary": {
            "value": "{global.color.neutral.800}",
            "type": "color",
            "description": "Secondary text color for less emphasis (e.g., descriptions, metadata)."
          },
          "disabled": {
            "value": "{global.color.neutral.500}",
            "type": "color",
            "description": "Text color for disabled elements."
          },
          "placeholder": {
            "value": "{global.color.neutral.700}",
            "type": "color",
            "description": "Placeholder text color in elements"
          },
          "onBrand": {
            "value": "{global.color.neutral.1000}",
            "type": "color",
            "description": "Default text color on primary brand backgrounds. Ensure WCAG contrast is met based on the specific brand color used."
          },
          "onColor": {
            "value": "{global.color.neutral.100}",
            "type": "color",
            "description": "Default text color on other colored backgrounds (e.g., feedback alerts). Ensure WCAG contrast."
          }
        },
        "link": {
          "default": {
            "value": "{global.color.orange.700}",
            "type": "color",
            "description": "Default link text color. Override in product sets if links should use a different color."
          },
          "hover": {
            "value": "{global.color.orange.600}",
            "type": "color",
            "description": "Hover state for link text. Override if needed."
          },
          "pressed": {
            "value": "{global.color.orange.900}",
            "type": "color",
            "description": "Pressed state for link text. Inherits primary brand hover color by default. Override if needed."
          },
          "disabled": {
            "value": "{semantic.color.link.default}",
            "type": "color",
            "$extensions": {
              "studio.tokens": {
                "modify": {
                  "type": "alpha",
                  "value": "0.4",
                  "space": "lch"
                }
              }
            }
          },
          "visited": {
            "value": "{global.color.orange.800}",
            "type": "color",
            "description": "Color for text links that have been previously visited by the user."
          }
        },
        "border": {
          "default": {
            "value": "{global.color.neutral.400}",
            "type": "color",
            "description": "Default border color for elements like inputs, cards, secondary buttons."
          },
          "subtle": {
            "value": "{global.color.neutral.300}",
            "type": "color",
            "description": "Subtle border color, often used for dividers or decorative borders."
          },
          "focus": {
            "value": "{semantic.color.brand.primary.default}",
            "type": "color",
            "description": "Focus outline/ring color. Inherits primary brand color by default. Override in product sets if needed."
          },
          "disabled": {
            "value": "{global.color.neutral.300}",
            "type": "color",
            "description": "Border color for disabled elements."
          },
          "error": {
            "value": "{global.color.red.600}",
            "type": "color",
            "description": "Border color for inputs or elements in an error state."
          }
        },
        "feedback": {
          "error": {
            "foreground": {
              "value": "{global.color.red.900}",
              "type": "color",
              "description": "Text/icon color on error background."
            },
            "background": {
              "value": "{global.color.red.300}",
              "type": "color",
              "description": "Background color for error messages/alerts."
            },
            "border": {
              "value": "{global.color.red.500}",
              "type": "color",
              "description": "Border color for error elements."
            },
            "strong": {
              "value": "{global.color.red.700}",
              "type": "color",
              "description": "Strong error color for emphasis, standalone icons/text, or as base for interactive error elements."
            },
            "interactive": {
              "default": {
                "value": "{semantic.color.feedback.error.strong}",
                "type": "color",
                "description": "Base color for error-related interactive elements (e.g., danger button background)."
              },
              "hover": {
                "value": "{global.color.red.600}",
                "type": "color",
                "description": "Hover background for error interactive elements."
              },
              "pressed": {
                "value": "{global.color.red.800}",
                "type": "color",
                "description": "Pressed background for error interactive elements."
              },
              "disabled": {
                "value": "{global.color.red.700}",
                "type": "color",
                "description": "Disabled background for error interactive elements. Uses transparency 40%.",
                "$extensions": {
                  "studio.tokens": {
                    "modify": {
                      "type": "alpha",
                      "value": "0.4",
                      "space": "lch"
                    }
                  }
                }
              }
            }
          },
          "warning": {
            "foreground": {
              "value": "{global.color.yellow.900}",
              "type": "color",
              "description": "Text/icon color on warning background."
            },
            "background": {
              "value": "{global.color.yellow.100}",
              "type": "color",
              "description": "Background color for warning messages/alerts."
            },
            "border": {
              "value": "{global.color.yellow.300}",
              "type": "color",
              "description": "Border color for warning elements."
            },
            "strong": {
              "value": "{global.color.yellow.200}",
              "type": "color",
              "description": "Strong warning color for emphasis, standalone icons/text, or as base for interactive error elements."
            },
            "interactive": {
              "default": {
                "value": "{semantic.color.feedback.warning.strong}",
                "type": "color",
                "description": "Base color for warning-related interactive elements "
              },
              "hover": {
                "value": "{global.color.yellow.100}",
                "type": "color",
                "description": "Hover background for warning interactive elements."
              },
              "pressed": {
                "value": "{global.color.yellow.300}",
                "type": "color",
                "description": "Pressed background for warning interactive elements."
              },
              "disabled": {
                "value": "{global.color.yellow.700}",
                "type": "color",
                "description": "Disabled background for warning interactive elements. Uses transparency 40%.",
                "$extensions": {
                  "studio.tokens": {
                    "modify": {
                      "type": "alpha",
                      "value": "0.4",
                      "space": "lch"
                    }
                  }
                }
              }
            }
          },
          "success": {
            "foreground": {
              "value": "{global.color.green.900}",
              "type": "color",
              "description": "Text/icon color on success background."
            },
            "background": {
              "value": "{global.color.green.300}",
              "type": "color",
              "description": "Background color for success messages/alerts."
            },
            "border": {
              "value": "{global.color.green.500}",
              "type": "color",
              "description": "Border color for success elements."
            },
            "strong": {
              "value": "{global.color.green.700}",
              "type": "color",
              "description": "Strong success color for emphasis, standalone icons/text, or as base for interactive success elements."
            },
            "interactive": {
              "default": {
                "value": "{semantic.color.feedback.success.strong}",
                "type": "color",
                "description": "Base color for success-related interactive elements"
              },
              "hover": {
                "value": "{global.color.green.600}",
                "type": "color",
                "description": "Hover background for success interactive elements."
              },
              "pressed": {
                "value": "{global.color.green.800}",
                "type": "color",
                "description": "Pressed background for success interactive elements."
              },
              "disabled": {
                "value": "{global.color.green.700}",
                "type": "color",
                "description": "Disabled background for success interactive elements. Uses transparency 40%.",
                "$extensions": {
                  "studio.tokens": {
                    "modify": {
                      "type": "alpha",
                      "value": "0.4",
                      "space": "lch"
                    }
                  }
                }
              }
            }
          },
          "info": {
            "foreground": {
              "value": "{global.color.blue.900}",
              "type": "color",
              "description": "Text/icon color on info background."
            },
            "background": {
              "value": "{global.color.blue.300}",
              "type": "color",
              "description": "Background color for info messages/alerts."
            },
            "border": {
              "value": "{global.color.blue.500}",
              "type": "color",
              "description": "Border color for info elements."
            },
            "strong": {
              "value": "{global.color.blue.700}",
              "type": "color",
              "description": "Strong info color for emphasis, standalone icons/text, or as base for interactive info elements."
            },
            "interactive": {
              "default": {
                "value": "{semantic.color.feedback.info.strong}",
                "type": "color",
                "description": "Base color for info-related interactive elements "
              },
              "hover": {
                "value": "{global.color.blue.600}",
                "type": "color",
                "description": "Hover background for info interactive elements."
              },
              "pressed": {
                "value": "{global.color.blue.800}",
                "type": "color",
                "description": "Pressed background for info interactive elements."
              },
              "disabled": {
                "value": "{global.color.blue.700}",
                "type": "color",
                "description": "Disabled background for info interactive elements. Uses transparency 40%.",
                "$extensions": {
                  "studio.tokens": {
                    "modify": {
                      "type": "alpha",
                      "value": "0.4",
                      "space": "lch"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "semantic/product/enterprise-dark": {
    "semantic": {
      "color": {
        "background": {
          "default": {
            "value": "{global.color.blue.1000}",
            "type": "color",
            "description": "The primary background color for the overall page or main content areas (typically white in light mode)."
          },
          "subtle": {
            "value": "{global.color.blue.900}",
            "type": "color",
            "description": "A slightly off-default background color used for subtle differentiation, like card backgrounds, sidebars, or grouped sections (typically light gray in light mode)."
          }
        },
        "text": {
          "primary": {
            "value": "{global.color.neutral.100}",
            "type": "color",
            "description": "Primary text color for high contrast readability. Override for dark themes."
          },
          "secondary": {
            "value": "{global.color.neutral.200}",
            "type": "color",
            "description": "Secondary text color for less emphasis (e.g., descriptions, metadata)."
          },
          "disabled": {
            "value": "{global.color.neutral.600}",
            "type": "color",
            "description": "Text color for disabled elements."
          },
          "placeholder": {
            "value": "{global.color.neutral.400}",
            "type": "color",
            "description": "Placeholder text color in elements"
          },
          "onBrand": {
            "value": "{global.color.neutral.900}",
            "type": "color",
            "description": "Default text color on primary brand backgrounds. Ensure WCAG contrast is met based on the specific brand color used."
          },
          "onColor": {
            "value": "{global.color.neutral.1000}",
            "type": "color",
            "description": "Default text color on other colored backgrounds (e.g., feedback alerts). Ensure WCAG contrast."
          }
        },
        "link": {
          "default": {
            "value": "{global.color.orange.400}",
            "type": "color",
            "description": "Default link text color. Override in product sets if links should use a different color."
          },
          "hover": {
            "value": "{global.color.orange.500}",
            "type": "color",
            "description": "Hover state for link text. Override if needed."
          },
          "pressed": {
            "value": "{global.color.orange.200}",
            "type": "color",
            "description": "Pressed state for link text. Inherits primary brand hover color by default. Override if needed."
          },
          "disabled": {
            "value": "{semantic.color.link.default}",
            "type": "color",
            "$extensions": {
              "studio.tokens": {
                "modify": {
                  "type": "alpha",
                  "value": "0.4",
                  "space": "lch"
                }
              }
            }
          },
          "visited": {
            "value": "{global.color.orange.300}",
            "type": "color",
            "description": "Color for text links that have been previously visited by the user."
          }
        },
        "border": {
          "default": {
            "value": "{global.color.neutral.700}",
            "type": "color",
            "description": "Default border color for elements like inputs, cards, secondary buttons."
          },
          "subtle": {
            "value": "{global.color.neutral.800}",
            "type": "color",
            "description": "Subtle border color, often used for dividers or decorative borders."
          },
          "disabled": {
            "value": "{global.color.neutral.800}",
            "type": "color",
            "description": "Border color for disabled elements."
          }
        }
      }
    }
  },
  "semantic/product/community-light": {
    "semantic": {
      "color": {
        "brand": {
          "primary": {
            "default": {
              "value": "{global.color.yellow.200}",
              "type": "color",
              "description": "The core brand color used as the base for primary actions and highlights.\n"
            },
            "hover": {
              "value": "{global.color.yellow.100}",
              "type": "color",
              "description": "Represents the hover state color for primary brand elements. The actual color value MUST be defined/overridden in the specific product theme set, typically a slightly lighter variant of the primary default color."
            },
            "pressed": {
              "value": "{global.color.yellow.300}",
              "type": "color",
              "description": "Represents the pressed/active state color for primary brand elements. The actual color value MUST be defined/overridden in the specific product theme set. Usually darker variant of default"
            },
            "disabled": {
              "value": "{semantic.color.interactive.primary.background.default}",
              "type": "color",
              "$extensions": {
                "studio.tokens": {
                  "modify": {
                    "type": "alpha",
                    "value": "0.4",
                    "space": "lch"
                  }
                }
              },
              "description": "The effective color/appearance for disabled primary brand elements (often derived via opacity)."
            }
          },
          "secondary": {
            "default": {
              "value": "{global.color.yellow.300}",
              "type": "color",
              "description": "The core brand color used as the base for secondary actions and elements."
            },
            "hover": {
              "value": "{global.color.yellow.200}",
              "type": "color",
              "description": "The brand color variant used for hover states on secondary elements."
            },
            "pressed": {
              "value": "{global.color.yellow.400}",
              "type": "color",
              "description": "The brand color variant used for pressed states on secondary elements."
            },
            "disabled": {
              "value": "{semantic.color.interactive.primary.background.default}",
              "type": "color",
              "$extensions": {
                "studio.tokens": {
                  "modify": {
                    "type": "alpha",
                    "value": "0.4",
                    "space": "lch"
                  }
                }
              },
              "description": "The effective color/appearance for disabled secondary brand elements (often derived via opacity)."
            }
          }
        },
        "background": {
          "default": {
            "value": "{global.color.cyan.400}",
            "type": "color",
            "description": "The primary background color for the overall page or main content areas (typically white in light mode)."
          },
          "subtle": {
            "value": "{global.color.cyan.300}",
            "type": "color",
            "description": "A slightly off-default background color used for subtle differentiation, like card backgrounds, sidebars, or grouped sections (typically light gray in light mode)."
          }
        },
        "text": {
          "primary": {
            "value": "{global.color.neutral.1000}",
            "type": "color",
            "description": "Primary text color for high contrast readability. Override for dark themes."
          },
          "secondary": {
            "value": "{global.color.neutral.900}",
            "type": "color",
            "description": "Secondary text color for less emphasis (e.g., descriptions, metadata)."
          },
          "disabled": {
            "value": "{global.color.neutral.500}",
            "type": "color",
            "description": "Text color for disabled elements."
          },
          "placeholder": {
            "value": "{global.color.neutral.700}",
            "type": "color",
            "description": "Placeholder text color in elements"
          },
          "onBrand": {
            "value": "{global.color.neutral.1000}",
            "type": "color",
            "description": "Default text color on primary brand backgrounds. Ensure WCAG contrast is met based on the specific brand color used."
          },
          "onColor": {
            "value": "{global.color.neutral.100}",
            "type": "color",
            "description": "Default text color on other colored backgrounds (e.g., feedback alerts). Ensure WCAG contrast."
          }
        },
        "link": {
          "default": {
            "value": "{global.color.neutral.900}",
            "type": "color",
            "description": "Default link text color. Override in product sets if links should use a different color."
          },
          "hover": {
            "value": "{global.color.yellow.600}",
            "type": "color",
            "description": "Hover state for link text. Override if needed."
          },
          "pressed": {
            "value": "{global.color.yellow.900}",
            "type": "color",
            "description": "Pressed state for link text. Inherits primary brand hover color by default. Override if needed."
          },
          "disabled": {
            "value": "{semantic.color.link.default}",
            "type": "color",
            "$extensions": {
              "studio.tokens": {
                "modify": {
                  "type": "alpha",
                  "value": "0.4",
                  "space": "lch"
                }
              }
            }
          },
          "visited": {
            "value": "{global.color.yellow.800}",
            "type": "color",
            "description": "Color for text links that have been previously visited by the user."
          }
        },
        "border": {
          "default": {
            "value": "{global.color.cyan.800}",
            "type": "color",
            "description": "Default border color for elements like inputs, cards, secondary buttons."
          },
          "subtle": {
            "value": "{global.color.cyan.500}",
            "type": "color",
            "description": "Subtle border color, often used for dividers or decorative borders."
          },
          "focus": {
            "value": "{semantic.color.brand.primary.default}",
            "type": "color",
            "description": "Focus outline/ring color. Inherits primary brand color by default. Override in product sets if needed."
          },
          "disabled": {
            "value": "{global.color.cyan.300}",
            "type": "color",
            "description": "Border color for disabled elements."
          },
          "error": {
            "value": "{global.color.red.600}",
            "type": "color",
            "description": "Border color for inputs or elements in an error state."
          }
        },
        "feedback": {
          "error": {
            "foreground": {
              "value": "{global.color.red.900}",
              "type": "color",
              "description": "Text/icon color on error background."
            },
            "background": {
              "value": "{global.color.red.300}",
              "type": "color",
              "description": "Background color for error messages/alerts."
            },
            "border": {
              "value": "{global.color.red.500}",
              "type": "color",
              "description": "Border color for error elements."
            },
            "strong": {
              "value": "{global.color.red.600}",
              "type": "color",
              "description": "Strong error color for emphasis, standalone icons/text, or as base for interactive error elements."
            },
            "interactive": {
              "default": {
                "value": "{semantic.color.feedback.error.strong}",
                "type": "color",
                "description": "Base color for error-related interactive elements (e.g., danger button background)."
              },
              "hover": {
                "value": "{global.color.red.500}",
                "type": "color",
                "description": "Hover background for error interactive elements."
              },
              "pressed": {
                "value": "{global.color.red.700}",
                "type": "color",
                "description": "Pressed background for error interactive elements."
              },
              "disabled": {
                "value": "{semantic.color.feedback.error.interactive.default}",
                "type": "color",
                "$extensions": {
                  "studio.tokens": {
                    "modify": {
                      "type": "alpha",
                      "value": "0.4",
                      "space": "lch"
                    }
                  }
                },
                "description": "Disabled background for error interactive elements. Uses transparency 40%."
              }
            }
          },
          "warning": {
            "foreground": {
              "value": "{global.color.orange.900}",
              "type": "color",
              "description": "Text/icon color on warning background."
            },
            "background": {
              "value": "{global.color.orange.200}",
              "type": "color",
              "description": "Background color for warning messages/alerts."
            },
            "border": {
              "value": "{global.color.orange.300}",
              "type": "color",
              "description": "Border color for warning elements."
            },
            "strong": {
              "value": "{global.color.orange.400}",
              "type": "color",
              "description": "Strong warning color for emphasis, standalone icons/text, or as base for interactive error elements."
            },
            "interactive": {
              "default": {
                "value": "{semantic.color.feedback.warning.strong}",
                "type": "color",
                "description": "Base color for warning-related interactive elements "
              },
              "hover": {
                "value": "{global.color.orange.300}",
                "type": "color",
                "description": "Hover background for warning interactive elements."
              },
              "pressed": {
                "value": "{global.color.orange.500}",
                "type": "color",
                "description": "Pressed background for warning interactive elements."
              },
              "disabled": {
                "value": "{global.color.orange.400}",
                "type": "color",
                "$extensions": {
                  "studio.tokens": {
                    "modify": {
                      "type": "alpha",
                      "value": "0.4",
                      "space": "lch"
                    }
                  }
                },
                "description": "Disabled background for warning interactive elements. Uses transparency 40%."
              }
            }
          },
          "success": {
            "foreground": {
              "value": "{global.color.green.900}",
              "type": "color",
              "description": "Text/icon color on success background."
            },
            "background": {
              "value": "{global.color.green.300}",
              "type": "color",
              "description": "Background color for success messages/alerts."
            },
            "border": {
              "value": "{global.color.green.500}",
              "type": "color",
              "description": "Border color for success elements."
            },
            "strong": {
              "value": "{global.color.green.600}",
              "type": "color",
              "description": "Strong success color for emphasis, standalone icons/text, or as base for interactive success elements."
            },
            "interactive": {
              "default": {
                "value": "{semantic.color.feedback.success.strong}",
                "type": "color",
                "description": "Base color for success-related interactive elements"
              },
              "hover": {
                "value": "{global.color.green.500}",
                "type": "color",
                "description": "Hover background for success interactive elements."
              },
              "pressed": {
                "value": "{global.color.green.800}",
                "type": "color",
                "description": "Pressed background for success interactive elements."
              },
              "disabled": {
                "value": "{global.color.green.700}",
                "type": "color",
                "description": "Disabled background for success interactive elements. Uses transparency 40%.",
                "$extensions": {
                  "studio.tokens": {
                    "modify": {
                      "type": "alpha",
                      "value": "0.4",
                      "space": "lch"
                    }
                  }
                }
              }
            }
          },
          "info": {
            "foreground": {
              "value": "{global.color.blue.900}",
              "type": "color",
              "description": "Text/icon color on info background."
            },
            "background": {
              "value": "{global.color.blue.300}",
              "type": "color",
              "description": "Background color for info messages/alerts."
            },
            "border": {
              "value": "{global.color.blue.500}",
              "type": "color",
              "description": "Border color for info elements."
            },
            "strong": {
              "value": "{global.color.blue.600}",
              "type": "color",
              "description": "Strong info color for emphasis, standalone icons/text, or as base for interactive info elements."
            },
            "interactive": {
              "default": {
                "value": "{semantic.color.feedback.info.strong}",
                "type": "color",
                "description": "Base color for info-related interactive elements "
              },
              "hover": {
                "value": "{global.color.blue.600}",
                "type": "color",
                "description": "Hover background for info interactive elements."
              },
              "pressed": {
                "value": "{global.color.blue.800}",
                "type": "color",
                "description": "Pressed background for info interactive elements."
              },
              "disabled": {
                "value": "{global.color.blue.700}",
                "type": "color",
                "description": "Disabled background for info interactive elements. Uses transparency 40%.",
                "$extensions": {
                  "studio.tokens": {
                    "modify": {
                      "type": "alpha",
                      "value": "0.4",
                      "space": "lch"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "semantic/product/community-dark": {
    "semantic": {
      "color": {
        "brand": {
          "primary": {
            "default": {
              "value": "{global.color.yellow.300}",
              "type": "color",
              "description": "The core brand color used as the base for primary actions and highlights.\n"
            },
            "hover": {
              "value": "{global.color.yellow.200}",
              "type": "color",
              "description": "Represents the hover state color for primary brand elements. The actual color value MUST be defined/overridden in the specific product theme set, typically a slightly lighter variant of the primary default color."
            },
            "pressed": {
              "value": "{global.color.yellow.400}",
              "type": "color",
              "description": "Represents the pressed/active state color for primary brand elements. The actual color value MUST be defined/overridden in the specific product theme set. Usually darker variant of default"
            },
            "disabled": {
              "value": "{semantic.color.interactive.primary.background.default}",
              "type": "color",
              "$extensions": {
                "studio.tokens": {
                  "modify": {
                    "type": "alpha",
                    "value": "0.4",
                    "space": "lch"
                  }
                }
              },
              "description": "The effective color/appearance for disabled primary brand elements (often derived via opacity)."
            }
          },
          "secondary": {
            "default": {
              "value": "{global.color.yellow.400}",
              "type": "color",
              "description": "The core brand color used as the base for secondary actions and elements."
            },
            "hover": {
              "value": "{global.color.yellow.300}",
              "type": "color",
              "description": "The brand color variant used for hover states on secondary elements."
            },
            "pressed": {
              "value": "{global.color.yellow.500}",
              "type": "color",
              "description": "The brand color variant used for pressed states on secondary elements."
            },
            "disabled": {
              "value": "{semantic.color.interactive.primary.background.default}",
              "type": "color",
              "$extensions": {
                "studio.tokens": {
                  "modify": {
                    "type": "alpha",
                    "value": "0.4",
                    "space": "lch"
                  }
                }
              },
              "description": "The effective color/appearance for disabled secondary brand elements (often derived via opacity)."
            }
          }
        },
        "background": {
          "default": {
            "value": "{global.color.cyan.900}",
            "type": "color",
            "description": "The primary background color for the overall page or main content areas (typically white in light mode)."
          },
          "subtle": {
            "value": "{global.color.cyan.300}",
            "type": "color",
            "description": "A slightly off-default background color used for subtle differentiation, like card backgrounds, sidebars, or grouped sections (typically light gray in light mode)."
          }
        },
        "text": {
          "primary": {
            "value": "{global.color.neutral.100}",
            "type": "color",
            "description": "Primary text color for high contrast readability. Override for dark themes."
          },
          "secondary": {
            "value": "{global.color.neutral.200}",
            "type": "color",
            "description": "Secondary text color for less emphasis (e.g., descriptions, metadata)."
          },
          "disabled": {
            "value": "{global.color.neutral.600}",
            "type": "color",
            "description": "Text color for disabled elements."
          },
          "placeholder": {
            "value": "{global.color.neutral.400}",
            "type": "color",
            "description": "Placeholder text color in elements"
          },
          "onBrand": {
            "value": "{global.color.neutral.1000}",
            "type": "color",
            "description": "Default text color on primary brand backgrounds. Ensure WCAG contrast is met based on the specific brand color used."
          },
          "onColor": {
            "value": "{global.color.neutral.100}",
            "type": "color",
            "description": "Default text color on other colored backgrounds (e.g., feedback alerts). Ensure WCAG contrast."
          }
        },
        "link": {
          "default": {
            "value": "{global.color.neutral.200}",
            "type": "color",
            "description": "Default link text color. Override in product sets if links should use a different color."
          },
          "hover": {
            "value": "{global.color.neutral.100}",
            "type": "color",
            "description": "Hover state for link text. Override if needed."
          },
          "pressed": {
            "value": "{global.color.neutral.300}",
            "type": "color",
            "description": "Pressed state for link text. Inherits primary brand hover color by default. Override if needed."
          },
          "disabled": {
            "value": "{semantic.color.link.default}",
            "type": "color",
            "$extensions": {
              "studio.tokens": {
                "modify": {
                  "type": "alpha",
                  "value": "0.4",
                  "space": "lch"
                }
              }
            }
          },
          "visited": {
            "value": "{global.color.neutral.300}",
            "type": "color",
            "description": "Color for text links that have been previously visited by the user."
          }
        },
        "border": {
          "default": {
            "value": "{global.color.cyan.300}",
            "type": "color",
            "description": "Default border color for elements like inputs, cards, secondary buttons."
          },
          "subtle": {
            "value": "{global.color.cyan.600}",
            "type": "color",
            "description": "Subtle border color, often used for dividers or decorative borders."
          },
          "focus": {
            "value": "{semantic.color.brand.primary.default}",
            "type": "color",
            "description": "Focus outline/ring color. Inherits primary brand color by default. Override in product sets if needed."
          },
          "disabled": {
            "value": "{global.color.cyan.300}",
            "type": "color",
            "description": "Border color for disabled elements."
          },
          "error": {
            "value": "{global.color.red.600}",
            "type": "color",
            "description": "Border color for inputs or elements in an error state."
          }
        }
      }
    }
  },
  "component/button": {
    "component": {
      "button": {
        "primary": {
          "background": {
            "value": "{semantic.color.interactive.primary.background.default}",
            "type": "color"
          }
        }
      }
    }
  },
  "modifier/high-contrast": {},
  "$themes": [],
  "$metadata": {
    "tokenSetOrder": [
      "global/typeface/font-core",
      "global/color",
      "global/scale",
      "global/dimension",
      "global/border",
      "semantic/base",
      "semantic/product/enterprise-dark",
      "semantic/product/community-light",
      "semantic/product/community-dark",
      "component/button",
      "modifier/high-contrast"
    ]
  }
}